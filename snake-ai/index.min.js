/*! Copyright minimindgames.com 13-10-2023 */

class Bug extends Phaser.Physics.Arcade.Sprite{constructor(e,s,t,i){super(e,s,t,i),this.on(Phaser.GameObjects.Events.DESTROY,this.destroyed),this.updateTime=0}destroyed(){2===this.type&&this.explode(),this.moveCallback&&this.scene.time.removeEvent(this.moveCallback)}explode(){let e=150*Config.scale;const s=this.scene.add.particles(this.x,this.y,"EffectExplode",{frame:[2],speed:{start:e,end:-e},quantity:5,ease:"Power2",lifespan:1500,maxParticles:50,blendMode:"ADD",alpha:{start:1,end:0}});this.scene.time.delayedCall(2e3,function(){s.destroy()},this)}initMove(){if(this.setBounce(1,1),this.moving=!0,this.rotation=Phaser.Math.Angle.Random(),3===this.type){this.scene.physics.velocityFromRotation(this.rotation,this.body.speed,this.body.velocity),this.body.angularVelocity=300;let e=100*Config.scale;this.body.setMaxSpeed(Phaser.Math.Between(e,1.25*e)),this.moveCallback=this.scene.time.delayedCall(1e3,this.doMove,[],this)}else{this.body.setVelocity(Phaser.Math.Between(50*Config.scale,150*Config.scale));let e=100;1===this.type&&(e+=100),this.body.angularVelocity=Phaser.Math.Between(-e,e),this.scene.physics.velocityFromRotation(this.rotation,this.body.speed,this.body.velocity)}}doMove(){let e=Phaser.Math.Angle.BetweenPoints(this,this.moveToUnit);this.scene.physics.velocityFromRotation(e,this.speed,this.body.acceleration),this.moveCallback=this.scene.time.delayedCall(500,this.doMove,[],this)}update(e){e>this.updateTime&&(this.updateTime=e+1e3)}}class Config{static initGame(e){let s=e.config.width,t=e.config.height;if(s<t){let e=s;s=t,t=e}console.log(s+"x"+t),Config.resolution=s>=2560&&t>=1440?4:s>=1920&&t>=1080?3:s>=1280&&t>=720?2:1,Config.scale=Config.resolution/4,Config.width=640*Config.resolution,Config.height=360*Config.resolution,Config.centerX=640*Config.resolution,Config.height=360*Config.resolution,Config.titleTextStyle={font:48*Config.scale+"px Courier",fill:"#00ff00",align:"center",backgroundColor:"rgba(0,0,0,0.0)",padding:16*Config.resolution},Config.textStyle={font:64*Config.scale+"px Courier",fill:"#00ff00",align:"center",backgroundColor:"rgba(0,0,0,0.25)",padding:16*Config.resolution},-1===window.location.href.indexOf("localhost:8383")&&(Config.loadPath="/snake-ai/img/"),Config.reset()}static setScale(e){e.scale.resize(Config.width,Config.height)}static addLevels(e){Config.levels=Config.levels.concat(e),Config.levels.push(0)}static reset(){Config.allMissions=[{id:1,do:"bite",desc:"Eat to grow",goalSnakeLength:!0,progress:0,target:1,levels:[{enemies:[1,2]}],status(e,s){return this.progress=e.player.bodyGroup.getLength(),s.type===this.target&&e.showProgress(this.progress+" / "+this.goal),this.progress>=this.goal}},{id:2,do:"explode",desc:"Boom bombs",goal:6,progress:0,target:2,levels:[{enemies:[1,2]}],status(e,s){return s.type===this.target&&(this.progress++,e.showProgress(this.progress+" / "+this.goal)),this.progress>=this.goal}},{id:3,do:"bite",desc:"Go GREEN",goalSnakeLength:!0,grayscale:!0,progress:0,target:1,levels:[{enemies:[1,1,2,2,5]}],status(e,s){return s.eatable&&e.showProgress(this.progress+" / "+this.goal),this.progress>=this.goal}},{id:4,do:"explode",desc:"Explode BOT",goal:1,progress:0,target:3,blade:1,levels:[{enemies:[1,1,2]}],status(e,s){return s.type===this.target&&(this.progress++,e.showProgress(this.progress+" / "+this.goal)),this.progress>=this.goal}},{id:5,do:"explode",desc:"Explode BOT",goal:1,progress:0,target:3,blade:1,levels:[{enemies:[1,1,2]}],status(e,s){return s.type===this.target&&(this.progress++,e.showProgress(this.progress+" / "+this.goal)),this.progress>=this.goal}},{id:6,do:"explode",desc:"Explode BOT",goal:1,progress:0,target:3,blade:1,levels:[{enemies:[1,1,2]}],status(e,s){return s.type===this.target&&(this.progress++,e.showProgress(this.progress+" / "+this.goal)),this.progress>=this.goal}}],Config.levels=[],Config.addLevels([1]);let e=[];for(let s=2;s<=6;s++)e.push(s);Phaser.Utils.Array.Shuffle(e),Config.addLevels(e.splice(0,2)),e=[];for(let s=1;s<=6;s++)e.push(s);for(Phaser.Utils.Array.Shuffle(e),Config.addLevels(e.splice(0,3));e.length>0;)Config.addLevels(e.splice(0,3));console.log(Config.levels),Config.missions=[];let s=0,t=0,i=0;for(let e=0;e<Config.levels.length;e++){let a,h=Config.levels[e];if(0!==h){for(s++,a=0;a<Config.allMissions.length;a++){let e=Config.allMissions[a];if(e.id===h){let s=Object.assign({},e);3===++i&&(i=0,t++),s.level=t,Config.missions.push(s);break}}a===Config.allMissions.length&&console.log("Not found "+a)}else{let e=0;for(let t=Config.missions.length-s;t<Config.missions.length;t++)Config.missions[t].index=++e,Config.missions[t].indexTotal=s;s=0,Config.missions[Config.missions.length-1].showMap=!0}}Config.missions[0].level=0,Config.missions[0].revenge=!0,Config.missions[0].begin=!0;for(let e=3;e<Config.missions.length-2;e+=3)Config.missions[e+Phaser.Math.Between(0,2)].revenge=!0;for(let e=0;e<Config.missions.length-1;e++)Config.missions[e].index=e+1;Config.missions.push({id:0,desc:"All Missions Complete",end:!0}),Config.headRewards=[{id:"Health"},{id:"Shield"}],Config.bodyRewards=[{id:"Length"},{id:"Heal"}],Config.rewards=[];for(let e=0;e<Config.missions.length-1;e+=3*Config.headRewards.length){Phaser.Utils.Array.Shuffle(Config.headRewards),Phaser.Utils.Array.Shuffle(Config.headRewards),Phaser.Utils.Array.Shuffle(Config.bodyRewards),Phaser.Utils.Array.Shuffle(Config.bodyRewards);for(let e=0;e<Config.headRewards.length;e++)Config.rewards.push(Object.assign({},Config.headRewards[e])),Config.rewards.push(Object.assign({},Config.bodyRewards[e]))}console.log(Config.rewards),Config.missionsComplete=0,Config.missionsTotal=Config.missions.length,Config.snakeLife=0,Config.snakeLength=6,Config.snakeShield=0,Config.snakeHeal=0,Config.escapePath=!0,Config.missionsPassed=[],Config.currentLength=1,Config.updateMissions()}static addReward(e,s){let t;switch(s[e?0:1].id){case"Health":Config.snakeLife++,t=`Snake Lifes ${Config.snakeLife+1}`;break;case"Length":Config.snakeLength++,t=`Snake Length ${Config.snakeLength}`;break;case"Shield":Config.snakeShield+=5,t=`Start Shield ${Config.snakeShield} sec`;break;case"Heal":Config.snakeHeal+=3,t=`Start Healing ${Config.snakeHeal}`}return Config.updateMissions(),t}static updateMissions(){for(let e=0;e<Config.missions.length-1;e++){let s=Config.missions[e],t=s.level||0;s.goalSnakeLength&&(s.goal=Config.snakeLength*(1+t)),s.progress=0}}}Config.resolution=1,Config.width=640,Config.height=360,Config.loadPath="img/",Config.highScore=0,Config.missions=null,Config.missionsTotal=0,Config.missionsComplete=0,Config.titleTextStyle=null,Config.textStyle=null,Config.snakeLife=0,Config.snakeLength=6,Config.snakeShield=0,Config.snakeHeal=0,Config.refreshLoad="?t="+Date.now(),Config.currentLength=1,Config.escapePath=!0,Config.missionsPassed=[];class MapScene extends Phaser.Scene{constructor(){super({key:"MapScene"})}preload(){this.load.path=Config.loadPath,this.resname=["-1","-2","-3",""][Config.resolution-1],this.loadSpriteSheet("teleport",200,200),this.loadSpriteSheet("gate-symbols",50,50),this.loadImage("gate-tile")}create(){this.input.keyboard.resetKeys(),this.cursors=this.input.keyboard.createCursorKeys(),this.cursorsLeftHand=this.input.keyboard.addKeys("A,D"),this.cameras.main.setRoundPixels(!0);this.escapeLabel=this.add.text(.25*this.cameras.main.width,this.cameras.main.centerY,"Escape path\nwith a shortcut\n\nPress [LEFT]",Config.titleTextStyle).setScrollFactor(0).setOrigin(.5),this.revengeLabel=this.add.text(.75*this.cameras.main.width,this.cameras.main.centerY,"Revenge path\nhard with Reward\n\nPress [RIGHT]",Config.titleTextStyle).setScrollFactor(0).setOrigin(.5),this.escapeLabel.setColor("cyan"),this.revengeLabel.setColor("orange"),this.passLabel=this.add.text(this.cameras.main.centerX,this.cameras.main.centerY,"",Config.titleTextStyle).setScrollFactor(0).setOrigin(.5),this.passLabel.visible=!1,this.mission=Config.missions[0],this.mission.end&&(this.escapeLabel.visible=!1,this.revengeLabel.text="Snake Revenge!\nComplete"),this.cameras.main.setBackgroundColor("rgba(0,0,0,0.5)");let e=this.add.group(),s=this.cameras.main.centerX,t=this.cameras.main.centerY,i=this.add.sprite(s,t,"teleport");i.scale=3.2,i.alpha=.25,this.anims.exists("teleport")||this.anims.create({key:"teleport",frameRate:30,frames:this.anims.generateFrameNumbers("teleport"),repeat:-1}),i.play("teleport");let a=i;var h=new Phaser.Geom.Circle(0,0,a.scale*a.width/2);let n=[];for(let e=0;e<24;e++)n.push(e);Phaser.Utils.Array.Shuffle(n);var o=this.add.container(a.x,a.y);e.add(o);let r=this.add.group();this.tiles=r;for(let e=0;e<24;e++){let s=r.create(0,0,"gate-tile");s.angle=15*e,n[e]>-2&&(s.tint=6710886),s.level=n[e],o.add(s)}Phaser.Actions.PlaceOnCircle(r.getChildren(),h);let l=this.add.group();this.symbols=l;for(let e=0;e<24;e++){let s=l.create(0,0,"gate-symbols",e);s.angle=15*e,n[e]>-2&&(s.tint=3355443),o.add(s)}Phaser.Actions.PlaceOnCircle(l.getChildren(),h),this.gate=o,this.symbolTween=this.tweens.add({targets:o,duration:6e4,callbackScope:this,rotation:2*Math.PI,repeat:-1},this),this.events.on(Phaser.Scenes.Events.WAKE,()=>{this.showMap()}),this.showMap(!0)}passLevel(e,s,t,i){this.time.delayedCall(2e3*e,()=>{let e=this.tiles.getChildren();for(let i=0;i<24;i++)if(e[i].level===s){e[i].tint=16777215,t&&(this.symbols.getChildren()[i].tint=16777215);break}this.passLabel.text=i,this.passLabel.visible=!0,this.passLabel.alpha=1,this.tweens.add({targets:[this.passLabel],duration:1500,alpha:0,ease:"Cubic.easeIn",callbackScope:this,onComplete:()=>{}})},[],this)}startGame(e){Config.escapePath=e,this.escapeLabel.visible=!1,this.revengeLabel.visible=!1,this.time.delayedCall(300,()=>{this.scene.switch("MissionScene")},[],this)}update(){if(this.escapeLabel.visible){var e=this.input.activePointer;if(this.cursors.left.isDown||this.cursorsLeftHand.A.isDown||e.isDown||this.cursors.right.isDown||this.cursorsLeftHand.D.isDown)e.isDown?this.usepointer=!0:this.keyleft=this.cursors.left.isDown|this.cursorsLeftHand.A.isDown,this.isStartGame=!0;else if(this.isStartGame){this.isStartGame=!1;let s=!1;this.usepointer?e.x<this.cameras.main.centerX&&(s=!0):s=this.keyleft,this.startGame(s),this.usepointer=!1,this.keyleft=!1}}}loadImage(e){this.load.image(e,e+this.resname+".png"+Config.refreshLoad)}loadSpriteSheet(e,s,t){let i=Config.scale*s,a=Config.scale*t;this.load.spritesheet(e,e+this.resname+".png"+Config.refreshLoad,{frameWidth:i,frameHeight:a})}showMap(e){let s="Mission "+(Config.allMissions.length-1-(Config.missions.length-3))+" / "+Config.allMissions.length,t=Config.missions[0];this.escapeLabel.visible=!1,this.revengeLabel.visible=!1,this.time.delayedCall(2e3*Config.missionsPassed.length,()=>{t.end?s="Snake Revenge Complete":(this.escapeLabel.visible=!0,this.revengeLabel.visible=!0)},[],this);for(let e=0;e<Config.missionsPassed.length;e++){let s=Config.missionsPassed[e],t="Mission\n\n"+s.desc+"\n\nComplete";this.passLevel(e,s.index,s.revenge,t)}Config.missionsPassed=[]}}class RevengeScene extends Phaser.Scene{constructor(){super({key:"RevengeScene"})}preload(){this.load.path=Config.loadPath,this.resname=["-1","-2","-3",""][Config.resolution-1],this.loadImage("CardHealth"),this.loadImage("CardLength"),this.loadImage("CardShield"),this.loadImage("CardHeal")}create(){this.input.keyboard.resetKeys(),this.cursors=this.input.keyboard.createCursorKeys(),this.cursorsLeftHand=this.input.keyboard.addKeys("A,D"),this.cameras.main.setRoundPixels(!0);this.missionTitle=this.add.text(this.cameras.main.centerX,this.cameras.main.centerY/3,"Begin Reward",Config.titleTextStyle).setScrollFactor(0).setOrigin(.5),this.missionTitle.setFontSize(128*Config.scale),this.missionTitle.visible=!1;let e=.33*this.cameras.main.width,s=this.cameras.main.centerY;this.cardHead=this.add.image(e,s,"CardHealth"),this.cardHead.visible=!1,this.cardBody=this.add.image(2*e,s,"CardLength"),this.cardBody.visible=!1;this.pressStartText=this.add.text(this.cameras.main.centerX,.8*this.cameras.main.height,"Press [LEFT/RIGHT] to Select",Config.titleTextStyle).setScrollFactor(0).setOrigin(.5),this.showRevenge(!0),this.events.on(Phaser.Scenes.Events.WAKE,()=>{this.showRevenge()}),this.startTitle=this.add.text(this.cameras.main.centerX,this.cameras.main.centerY/2,"",Config.titleTextStyle).setScrollFactor(0).setOrigin(.5),this.startText=this.add.text(this.cameras.main.centerX,this.missionTitle.y+this.missionTitle.height,"",Config.textStyle).setScrollFactor(0).setOrigin(.5)}startGame(e){const s=Config.addReward(e,this.rewards);let t;this.perkSelected=!0,this.pressStartText.visible=!1,this.time.delayedCall(3e3,()=>{this.startTitle.visible=!1,this.startText.visible=!1,this.scene.switch("MissionScene"),this.cardHead.visible=!1,this.cardBody.visible=!1},[],this),this.missionTitle.visible=!1,t=e?this.cardBody:this.cardHead,this.startTitle.text="Revenge Reward",this.startText.text=s,this.startTitle.x=t.x,this.startTitle.y=t.y-this.startTitle.height,this.startTitle.visible=!0,this.startText.x=t.x,this.startText.y=this.startTitle.y+this.startTitle.height,this.startText.visible=!0,this.tweens.add({targets:[t],duration:200,alpha:0,callbackScope:this,onComplete:e=>{e.visible=!1,e.alpha=1}})}update(){if(!this.perkSelected){var e=this.input.activePointer;if(this.cursors.left.isDown||this.cursorsLeftHand.A.isDown||e.isDown||this.cursors.right.isDown||this.cursorsLeftHand.D.isDown)e.isDown?this.usepointer=!0:this.keyleft=this.cursors.left.isDown|this.cursorsLeftHand.A.isDown,this.isStartGame=!0;else if(this.isStartGame){this.isStartGame=!1;let s=!1;this.usepointer?e.x<this.cameras.main.centerX&&(s=!0):s=this.keyleft,this.startGame(s),this.usepointer=!1,this.keyleft=!1}}}loadImage(e){this.load.image(e,e+this.resname+".png"+Config.refreshLoad)}showRevenge(e){this.missionTitle.text=e?"Begin Reward":"Select Reward";let s=Config.missions[0];this.pressStartText.visible=!0,this.isStartGame=!1,this.usepointer=!1,this.keyleft=!1,this.perkSelected=!1,this.rewards=Config.rewards.splice(0,2);let[t,i]=this.rewards;this.cardHead.setTexture("Card"+t.id),this.cardBody.setTexture("Card"+i.id),s.end||(this.missionTitle.visible=!0,this.cardHead.visible=!0,this.cardHead.alpha=1,this.cardBody.visible=!0,this.cardBody.alpha=1)}}class MissionScene extends Phaser.Scene{constructor(){super({key:"MissionScene"})}preload(){this.load.path=Config.loadPath,this.resname=["-1","-2","-3",""][Config.resolution-1],this.loadImage("help-bite"),this.loadImage("help-explode")}create(){let e,s,t,i=this.scene.get("LoaderScene").mission;if(this.restartGame=i.end,i.end?(e=i.desc,s="Snake Revenge!"):(e=Config.missions.length===Config.missionsTotal-1?"Snake Revenge Begins":i.revenge?"Revenge Mission":"Escape Mission",s=i.revenge?i.desc:i.desc+" and escape"),"bite"===i.do||"explode"===i.do){this.helpImage=this.add.image(this.cameras.main.centerX,this.cameras.main.centerY/4,"help-"+i.do),this.helpImage.setDepth(1);let e=["virus","Bomb","Blade","Green","virus2"][i.target-1];this.targetImage=this.add.image(this.helpImage.x,this.helpImage.y,e),this.targetImage.scale=1.5}this.missionTitle=this.add.text(this.cameras.main.centerX,this.cameras.main.centerY/2,e,Config.titleTextStyle).setScrollFactor(0).setOrigin(.5),this.missionText=this.add.text(this.cameras.main.centerX,this.missionTitle.y+this.missionTitle.height,s,Config.textStyle).setScrollFactor(0).setOrigin(.5),this.isGameOver=!0,this.isGameOverTime=0,i.end?(t="Reload to Restart",this.isGameOver=!1):(t="Press [LEFT/RIGHT] to Start",this.isGameOver=!0),this.startText=this.add.text(this.cameras.main.centerX,.75*this.cameras.main.height,t,Config.titleTextStyle).setScrollFactor(0).setOrigin(.5),this.input.keyboard.resetKeys(),this.cursors=this.input.keyboard.createCursorKeys(),this.cursorsLeftHand=this.input.keyboard.addKeys("A,D"),this.cameras.main.setRoundPixels(!0),this.disableInputTime=this.time.now,this.events.on(Phaser.Scenes.Events.WAKE,()=>{this.disableInputTime=this.time.now})}startGame(){this.isGameOver=!1,this.missionTitle.visible=!1,this.missionText.visible=!1,this.startText.visible=!1,this.input.keyboard.removeAllKeys(!0),this.input.keyboard.resetKeys(),this.helpImage.visible=!1,this.targetImage.visible=!1,0===this.isGameOverTime?this.scene.resume("LoaderScene"):this.scene.get("LoaderScene").scene.restart()}gameOver(e,s,t,i,a){e&&!Config.missions[0].end&&(this.revenge=i.revenge),e&&1!==i.id&&(this.showMap=i.showMap),this.extralife=a,this.isGameOver=!0,this.isWin=e,this.showMission(s,t)}update(){if(!(this.disableInputTime+500>this.time.now))if(this.revenge)this.isGameOverTime<this.time.now&&(this.scene.switch("RevengeScene"),this.revenge=!1);else if(this.showMap)this.isGameOverTime<this.time.now&&(this.scene.switch("MapScene"),this.showMap=!1);else if(this.isGameOver&&!(this.isGameOverTime>this.time.now)){if(this.isGameOverTime>0)return this.extralife||this.isWin||Config.reset(),Config.missions.length<=1&&(this.isGameOver=!1),void this.startGame();var e=this.input.activePointer;(this.cursors.left.isDown||this.cursorsLeftHand.A.isDown||e.isDown||this.cursors.right.isDown||this.cursorsLeftHand.D.isDown)&&this.startGame()}}showMission(e,s){if(this.missionTween&&(this.tweens.remove(this.missionTween),this.missionTitle.alpha=1,this.missionText.alpha=1),s?(this.missionTitle.text=e,this.missionTitle.visible=!0):(this.missionTitle.visible=!1,s=e),this.missionText.text=s,this.missionText.visible=!0,this.isGameOver){let e=this.isWin?3e3:5e3;this.isGameOverTime=this.time.now+e}else this.missionTween=this.tweens.add({targets:[this.missionTitle,this.missionText],duration:2e3,alpha:0,ease:"Cubic.easeIn",callbackScope:this,onComplete:e=>{this.missionTween=null,this.missionTitle.visible=!1,this.missionTitle.alpha=1,this.missionText.visible=!1,this.missionText.alpha=1}})}loadImage(e){this.load.image(e,e+this.resname+".png"+Config.refreshLoad)}}class LoaderScene extends Phaser.Scene{constructor(){super({key:"LoaderScene",visible:!1}),this.loadProgress=0}preload(){this.load.path=Config.loadPath,this.resname=["-1","-2","-3",""][Config.resolution-1];let e=-1;Config.origLength=Config.currentLength;this.mission=Config.missions[0],e=this.mission.id,Config.missions.splice(0,1),1!==this.mission.id&&Config.escapePath&&this.mission.revenge&&(console.log("skip revenge"),this.mission=Config.missions[0],e=this.mission.id,Config.missions.splice(0,1)),this.loadSpriteSheet("asteroids",32,32),this.loadImage("snakehead"),this.loadImage("snakebite"),this.loadImage("snakebody"),this.loadImage("snaketail"),this.loadImage("snakeshield"),this.loadImage("Blade"),this.loadImage("Bomb");for(let e=1;e<=3;e++)this.loadImage("planet"+e);this.mission.begin&&(this.loadImage("left"),this.loadImage("right")),this.loadImage("EffectTeleport"),this.loadSpriteSheet("EffectExplode",64,64),this.loadSpriteSheet("virus",64,64),this.loadSpriteSheet("virus2",64,64),this.loadSpriteSheet("Green",80,80),this.loadSpriteSheet("teleport",200,200)}create(){Config.setScale(this),this.snap=this.textures.get("asteroids").getSourceImage().height,this.width=2560*Config.scale/this.snap,this.height=2560*Config.scale/this.snap;let e=this.snap*this.width,s=this.snap*this.height;this.w=e,this.h=s,this.overlapColliders=[],this.missionHelper=this.add.text(this.cameras.main.centerX,this.cameras.main.centerY,"",Config.titleTextStyle).setScrollFactor(0).setOrigin(.5),this.missionHelper.visible=!1,this.buildingGroup=this.physics.add.staticGroup(),this.barrierGroup=this.physics.add.staticGroup(),this.enemyGroup=this.physics.add.group({runChildUpdate:!0}),this.teleport=this.buildingGroup.create(e/2,s/2,"teleport"),this.teleport.visible=!1;let t=[];t.push(this.teleport);for(let i=1;i<=3;i++){let a=3*this.teleport.width;const h=new Phaser.Geom.Rectangle(a,a,e-a,s-a),n=[[1,11639188],[.8,9664102],[.6,13877453]];for(;n.length>0;){let e=this.randomXY(t,a,h),s=this.barrierGroup.create(e.x,e.y,"planet"+i);const o=n.pop();s.setTint(o.pop()),s.setScale(o.pop()),s.body.setSize(s.width/2,s.height/2),t.push(s)}}t.unshift();let i=this.snap,a=i/2,h=this.textures.get("asteroids").frameTotal-2;for(let e=0;e<this.width;e++)this.barrierGroup.create(a+i*e,a,"asteroids",Phaser.Math.Between(0,h)),this.barrierGroup.create(a+i*e,i*this.height-a,"asteroids",Phaser.Math.Between(0,h));for(let e=0;e<this.height;e++)this.barrierGroup.create(a,a+i*e,"asteroids",Phaser.Math.Between(0,h)),this.barrierGroup.create(i*this.width-a,a+i*e,"asteroids",Phaser.Math.Between(0,h));new Phaser.Geom.Rectangle(.2*e,.2*s,.6*e,.6*s);let n=new Phaser.Geom.Point(e/2,s/2);this.player=new Player(this),this.time.delayedCall(100,this.addBug,[],this),this.input.keyboard.resetKeys(),this.cursors=this.input.keyboard.createCursorKeys(),this.cursorsLeftHand=this.input.keyboard.addKeys("A,D"),this.input.mouse&&this.input.mouse.disableContextMenu(),this.pointer={left:!1,right:!1},this.text=this.add.text(10,10,"",{font:64*Config.scale+"px Courier",fill:"#00ff00"}).setScrollFactor(0),this.cameras.main.setBounds(0,0,e,s),this.physics.world.setBounds(0,0,e,s),this.addOverlapCollider(this.physics.add.collider(this.enemyGroup,this.barrierGroup)),this.score=0,this.scoreTimer=this.time.addEvent({delay:1e3,callback:function(){this.score++},callbackScope:this,loop:!0}),this.anims.exists("virus")||this.anims.create({key:"virus",frameRate:7,frames:this.anims.generateFrameNumbers("virus"),repeat:-1}),this.anims.exists("Green")||this.anims.create({key:"Green",frameRate:7,frames:this.anims.generateFrameNumbers("Green"),repeat:-1}),this.anims.exists("teleport")||this.anims.create({key:"teleport",frameRate:30,frames:this.anims.generateFrameNumbers("teleport"),repeat:-1}),this.physics.world.timeScale=1,this.player.init(n),this.scene.pause(),this.scene.run("MissionScene"),this.missionScene=this.scene.get("MissionScene"),this.snakeShield=0,this.events.on("resume",()=>{this.time.delayedCall(0,()=>{this.anims.resumeAll(),0===this.snakeShield&&(this.snakeShield=1e3*Config.snakeShield,this.snakeShield+=this.time.now,this.snakeShield>0&&(this.headShield=this.physics.add.sprite(n.x,n.y,"snakeshield"),this.tweens.add({targets:this.headShield,duration:1e3*Config.snakeShield,alpha:0,ease:"Cubic.easeIn"}),this.headShield.preUpdate=(()=>{if(this.player.head){if(!this.player.head.visible||this.snakeShield<this.time.now)return void this.headShield.destroy();this.headShield.x=this.player.head.x,this.headShield.y=this.player.head.y}})))},this)}),this.mission.complete=!1,this.isGameOver=!1,this.mission.blade&&(this.blade=this.createBug(3,this.player.head.x,this.player.head.y),this.blade.moveToUnit=this.player.head)}showProgress(e){this.missionHelperTween&&(this.tweens.remove(this.missionHelperTween),this.missionHelper.alpha=1),this.missionHelper.x=this.player.head.x-this.cameras.main.worldView.x,this.missionHelper.y=this.player.head.y-this.cameras.main.worldView.y,this.player.head.y>this.cameras.main.centerY?this.missionHelper.y-=this.player.head.height:this.missionHelper.y+=this.player.head.height,this.missionHelper.text=e,this.missionHelper.visible=!0,this.missionHelperTween=this.tweens.add({targets:this.missionHelper,duration:1500,alpha:0,ease:"Cubic.easeIn",callbackScope:this,onComplete:e=>{this.missionTween=null,this.missionHelper.visible=!1,this.missionHelper.alpha=1}})}addOverlapCollider(e){if(null===e)for(const e of this.overlapColliders)this.physics.world.removeCollider(e);this.overlapColliders.push(e)}teleportEffect(e,s=2500,t=3){let i,a=this.add.image(e.x,e.y,"EffectTeleport");switch(e.type){case-1:i=11206604;break;case 1:i=10066431;break;case 2:i=16751001;break;case 3:i=16711680;break;case 4:i=10092441;break;default:i=16777215}a.setTint(i),a.scale=0,this.tweens.add({targets:a,scale:t,ease:"Linear",duration:s,alpha:0,rotation:2*Math.PI,callbackScope:this,onComplete:function(){a.destroy()}}),e.scale=0,e.alpha=0,e.visible=!0,this.tweens.add({targets:e,scale:1,ease:"Linear",duration:1500,alpha:1,delay:150,rotation:2*Math.PI,callbackScope:this,onComplete:function(){}})}update(e,s){var t=this.input.activePointer;t.isDown?t.x<this.cameras.main.centerX?(this.pointer.left=!0,this.pointer.right=!1):(this.pointer.left=!1,this.pointer.right=!0):(this.pointer.left=!1,this.pointer.right=!1),this.player.update(s,this.cursors,this.cursorsLeftHand,this.pointer),this.text.visible=!1}gameOver(e){if(this.isGameOver)return;Config.currentLength=this.player.bodyGroup.getLength(),Config.currentLength>Config.snakeLength&&(Config.currentLength=Config.snakeLength),e&&Config.missionsPassed.push(this.mission),this.isGameOver=!0,this.addOverlapCollider(null),this.time.removeEvent(this.addCallback),this.time.removeEvent(this.scoreTimer);let s,t=null,i=!1;if(e&&this.mission.revenge)s="Mission complete",this.mission.begin&&(s="Mission Begins"),t="Snake Revenge!",this.cameras.main.fadeOut(4e3),this.player.isGameOver=!0;else if(e){this.cameras.main.fadeOut(4e3);let e=this.teleport;this.tweens.add({targets:e,scale:0,ease:"Cubic.easeIn",duration:3e3,alpha:0,rotation:2*Math.PI,onComplete:function(){e.destroy()}}),this.tweens.add({targets:this.player.bodyGroup.getChildren(),ease:"Cubic.easeIn",duration:2e3,alpha:0,x:this.teleport.x,y:this.teleport.y,rotation:2*Math.PI,onComplete:function(){}}),this.tweens.add({targets:this.player.head,ease:"Cubic.easeIn",duration:2e3,alpha:0,x:this.teleport.x,y:this.teleport.y,rotation:2*Math.PI,onComplete:function(){}}),s="Snake Escape!",t=null}else this.cameras.main.fadeOut(6e3),s="Lost in Mission "+this.mission.index+" / "+Config.missions.length,Config.snakeLife>0?(Config.missions.unshift(this.mission),this.mission.progress=0,t=`Snake Life 1/${Config.snakeLife} to RETRY`,Config.snakeLife--,i=!0,Config.currentLength=Config.origLength):t="GAME OVER";this.missionScene.gameOver(e,s,t,this.mission,i);let a=(this.mission.revenge,2500);e||(a=5e3),this.time.delayedCall(a,()=>{this.physics.pause(),this.anims.pauseAll()},this)}gameOverRestart(){Config.missions.length>0?this.scene.restart():this.time.delayedCall(5e3,()=>{Config.restart(),this.scene.restart()},this)}loadSpriteSheet(e,s,t){let i=Config.scale*s,a=Config.scale*t;this.load.spritesheet(e,e+this.resname+".png"+Config.refreshLoad,{frameWidth:i,frameHeight:a})}loadImage(e){this.load.image(e,e+this.resname+".png"+Config.refreshLoad)}randomX(){const e=this.snap,s=e/2;return Phaser.Math.Between(1,this.width-1)*e+s}randomY(){const e=this.snap,s=e/2;return Phaser.Math.Between(1,this.height-1)*e+s}randomXY(e,s,t){let i=new Phaser.Geom.Point;s*=s;for(let a=0;a<100;a++){if(i.x=this.randomX(),i.y=this.randomY(),t&&!Phaser.Geom.Rectangle.ContainsPoint(t,i))continue;let a;for(a=0;a<e.length;a++){let t=e[a];if(Phaser.Math.Distance.BetweenPointsSquared(i,t)<s)break}if(a===e.length)break}return i}createBug(e,s,t){var i=e;if(!e){let e=this.mission.level;e>=this.mission.levels.length&&(e=this.mission.levels.length-1);let s=this.mission.levels[e].enemies;i=Phaser.Math.RND.pick(s)}let a;a=s?new Phaser.Geom.Point(s,t):this.randomXY([this.player.head],10*this.snap);let h=new Bug(this,a.x,a.y,["virus","Bomb","Blade","Green","virus2"][i-1]);h.type=i;let n=1;return 1===i&&h.play("virus"),4===i&&h.play("Green"),1!==i&&4!==i&&5!==i||(h.eatable=!0),3===i&&(n=3),this.enemyGroup.add(h,!0),this.teleportEffect(h,1500,n),h.moveCallback=this.time.delayedCall(1500,()=>{h.initMove()},[],this),h}addBug(e){if(this.mission.complete)return;this.createBug(e);this.addCallback=this.time.delayedCall(300,this.addBug,[],this)}removeBug(e){if(!this.isGameOver){if(!this.mission.complete){if(0||this.mission.status(this,e))if(this.mission.complete=!0,this.mission.revenge){this.player.overlapBuilding(),this.time.delayedCall(200,function(){this.cameras.main.flash(2500)},[this],this);let s=this.player.bodyGroup.getChildren();s.length>Config.snakeLength+1&&this.player.cutTail(s[Config.snakeLength]);let t=this.enemyGroup.getChildren();for(let s=t.length-1;s>=0;s--)t[s]!==e&&(t[s].type=-1,t[s].destroy())}else this.missionScene.showMission("Mission complete","Teleport to ESCAPE"),this.teleport.visible||(this.teleport.type=-1,this.teleport.body.setSize(this.teleport.width/2,this.teleport.height/2),this.teleportEffect(this.teleport),this.teleport.play("teleport"),this.teleport.scale=0,this.teleport.alpha=0,this.tweens.add({targets:this.teleport,ease:"Linear",duration:2e3,scale:1,alpha:.75,callbackScope:this,onComplete:function(){this.tweens.add({targets:this.teleport,ease:"Linear",duration:1e3,scale:1,alpha:.25,yoyo:!0,repeat:-1})}}),this.tweens.add({targets:this.teleport,ease:"Linear",duration:2500,repeat:-1,rotation:2*Math.PI,onComplete:function(){}}),this.time.delayedCall(2e3,()=>{this.addOverlapCollider(this.physics.add.overlap(this.player.head,this.teleport,this.player.overlapBuilding,null,this.player))},[],this))}e.destroy()}}}class Player{constructor(e){this.scene=e,this.bodyGroup=e.physics.add.group(),this.bulletGroup=e.physics.add.group()}init(e){let s=this.scene;this.path=[],this.pathRotation=[],this.path.push(new Phaser.Geom.Point(e.x,e.y)),this.pathRotation.push(0),this.pathSpacer=10,Config.currentLength+=Config.snakeHeal,Config.currentLength>Config.snakeLength&&(Config.currentLength=Config.snakeLength);let t=Config.currentLength;for(let s=0;s<t;s++){let s=this.addBody(e);this.scene.mission.grayscale&&s.setTexture("snaketail")}let i=s.physics.add.sprite(e.x,e.y,"snakehead");i.rotation=Phaser.Math.Angle.Random(),s.cameras.main.startFollow(i,!0,0,.05),i.setCollideWorldBounds(!0),i.body.setVelocity(300*Config.scale),i.body.setSize(i.width/2,i.height/2),i.setDepth(1),this.head=i,s.mission.begin&&(this.head.rotation=-Math.PI/2,this.leftSprite=s.add.sprite(e.x,e.y,"left",0,!0),this.leftSprite.setOrigin(2,0),this.leftSprite.rotation=this.head.rotation+Math.PI/2,this.leftSprite.preUpdate=(()=>{this.leftSprite.visible=!this.isGameOver,this.leftSprite.x=this.head.x,this.leftSprite.y=this.head.y,this.leftSprite.rotation=this.head.rotation+Math.PI/2}),this.rightSprite=s.add.sprite(e.x,e.y,"right",0,!0),this.rightSprite.preUpdate=(()=>{this.rightSprite.visible=!this.isGameOver,this.rightSprite.x=this.head.x,this.rightSprite.y=this.head.y,this.rightSprite.rotation=this.head.rotation+Math.PI/2}),this.rightSprite.setOrigin(-1,0),this.rightSprite.rotation=this.head.rotation+Math.PI/2,this.scene.time.delayedCall(1e4,function(){this.leftSprite.destroy(),this.rightSprite.destroy()},[this],this)),s.addOverlapCollider(s.physics.add.collider(this.head,this.bodyGroup,this.collideHeadBody,null,this)),s.addOverlapCollider(s.physics.add.collider(this.head,s.barrierGroup,this.collideHeadBarrier,null,this)),s.addOverlapCollider(s.physics.add.collider(this.head,this.bulletGroup)),s.addOverlapCollider(s.physics.add.overlap(this.head,s.enemyGroup,this.collideHeadEnemy,null,this)),s.addOverlapCollider(s.physics.add.collider(this.bodyGroup,s.enemyGroup,this.collideBodyEnemy,null,this)),s.addOverlapCollider(s.physics.add.collider(this.bulletGroup,s.enemyGroup,this.collideBulletEnemy,null,this)),this.delta=0,this.collideBarrierTimeout=0,this.collideHeadBodyTime=0,this.isGameOver=!1,this.gameOvertime=1e3}explodeHead(e){let s=150*Config.scale;const t=this.scene.add.particles(e.x,e.y,"EffectExplode",{frame:[0],speed:{start:.67*s,end:.67*-s},quantity:5,ease:"Power2",lifespan:1e3,maxParticles:100,blendMode:"ADD",alpha:{start:1,end:0}});this.scene.time.delayedCall(2e3,function(){t.destroy()},this)}explode(e){let s=150*Config.scale;const t=this.scene.add.particles(e.x,e.y,"EffectExplode",{frame:[3],speed:{start:s,end:-s},quantity:1,ease:"Power2",lifespan:500,maxParticles:5,blendMode:"ADD",alpha:{start:1,end:0}});this.scene.time.delayedCall(2e3,function(){t.destroy()},this)}addBody(e){let s=this.bodyGroup.getLength()<Config.snakeLength?"snakebody":"snaketail",t=this.scene.physics.add.sprite(e.x,e.y,s);this.head?t.rotation=this.head.rotation:t.rotation=-Math.PI/2,t.body.setSize(t.width/2,t.height/2),t.collideTime=this.scene.time.now+200,this.bodyGroup.add(t);for(let e=0;e<this.pathSpacer;e++)this.path.push(new Phaser.Geom.Point(t.x,t.y)),this.pathRotation.push(0);return t}cutTail(e){for(let s=null;s!==e;){s=this.bodyGroup.getChildren().pop(),this.scene.mission.goalSnakeLength&&this.scene.mission.progress>this.bodyGroup.getLength()&&(this.scene.mission.progress=this.bodyGroup.getChildren().length),this.bulletGroup.add(s);for(let e=0;e<this.pathSpacer;e++)this.path.pop(),this.pathRotation.pop();s.setTexture("snaketail"),s.body.setVelocity(Phaser.Math.Between(100*Config.scale,200*Config.scale)),s.rotation=Phaser.Math.Angle.Random(),this.scene.physics.velocityFromRotation(s.rotation,s.body.speed,s.body.velocity),this.scene.tweens.add({targets:s,duration:Phaser.Math.Between(2e3,3500),scale:0,ease:"Cubic.easeIn",callbackScope:this,onComplete:e=>{e.effectTimer&&this.scene.time.removeEvent(e.effectTimer),e.destroy()}})}if(0===this.bodyGroup.getChildren().length){if(this.isGameOver)return;this.isGameOver=!0,this.head.visible=!1,this.explodeHead(this.head),this.scene.gameOver(!1)}}collideHeadBody(e,s){if(this.collideHeadBodyTime>this.scene.time.now)return;if(this.scene.snakeShield>this.scene.time.now)return;if(this.collideHeadBodyTime=this.scene.time.now+200,s.collideTime>this.scene.time.now)return;let t=this.bodyGroup.getChildren().indexOf(s);if(0===t)return;let i=new Phaser.Geom.Point(this.head.x,this.head.y),a=Math.floor((t+1)/2),h=2*this.scene.snap*(2*this.scene.snap);for(let e=-1;e<a;e++){let s,n;-1===e?(s=this.head,n=this.bodyGroup.getChildren()[t]):(s=this.bodyGroup.getChildren()[e],n=this.bodyGroup.getChildren()[e+a]),i.x=(s.x+n.x)/2,i.y=(s.y+n.y)/2;let o=new Phaser.Geom.Line(s.x,s.y,n.x,n.y).getPoints(0,2*this.scene.snap);for(let e=0;e<o.length;e++)if(this.explode(o[e]),this.explodeEnemies(o[e],h),this.scene.isGameOver)return}this.cutTail(s)}explodeEnemies(e,s){for(let t=this.scene.enemyGroup.getChildren().length-1;t>=0;t--){let i=this.scene.enemyGroup.getChildren()[t];Phaser.Math.Distance.BetweenPointsSquared(i,e)<s&&this.scene.removeBug(i)}}collideHeadBarrier(e,s){this.scene.snakeShield>this.scene.time.now||0===this.bodyGroup.getLength()||this.scene.time.now<this.collideBarrierTimeout||(this.collideBarrierTimeout=this.scene.time.now+100,this.cutTail(this.bodyGroup.getChildren()[this.bodyGroup.getChildren().length-1]),this.scene.cameras.main.shake(200,.01))}collideHeadEnemy(e,s){if(!s.moving)return;if(!this.head.visible)return;let t=!0;if(this.scene.mission.grayscale&&s.eatable&&(s.type===this.scene.mission.target?this.scene.mission.progress<this.scene.mission.goal&&(this.scene.mission.progress<this.bodyGroup.getLength()&&(this.bodyGroup.getChildren()[this.scene.mission.progress].setTexture("snakebody"),t=!1),this.scene.mission.progress++):(this.scene.mission.progress>0&&(this.scene.mission.progress--,this.bodyGroup.getChildren()[this.scene.mission.progress].setTexture("snaketail")),t=!1)),s.eatable)t&&this.addBody(this.bodyGroup.getLast()||this.head),this.head.setScale(.6666),this.head.setTexture("snakebite"),this.scene.tweens.add({targets:this.head,duration:75,scale:1,yoyo:!0,callbackScope:this,onComplete:function(){this.head.setTexture("snakehead"),this.head.setScale(1)}});else if(this.scene.snakeShield<this.scene.time.now){let e=this.bodyGroup.getChildren().length-Phaser.Math.Between(3,4);e<=0&&(e=0),this.cutTail(this.bodyGroup.getChildren()[e]),this.scene.cameras.main.shake(200,.01)}3!==s.type&&this.scene.removeBug(s)}collideBodyEnemy(e,s){if(s.moving&&(2===s.type&&this.scene.removeBug(s),3===s.type)){let e=this.bodyGroup.getChildren();for(let s=0;s<e.length;s++)this.flashColor(e[s],65280)}}collideBulletEnemy(e,s){s.moving&&2===s.type&&(e.destroy(),this.scene.removeBug(s))}overlapBuilding(e,s){if(this.isGameOver)return;this.isGameOver=!0,this.bodyGroup.getChildren().length-1>=Config.snakeLength&&this.cutTail(this.bodyGroup.getChildren()[Config.snakeLength]),this.scene.gameOver(!0)}update(e,s,t,i){this.isGameOver&&(this.gameOvertime+=e,this.scene.physics.world.timeScale+=this.gameOvertime/1e3/20);let a=this.head,h=this.path,n=this.pathSpacer;if(a.setAcceleration(0),a.setDrag(0),a.body.angularVelocity=0,this.head.visible&&((s.left.isDown||t.A.isDown||i.left)&&(a.body.angularVelocity=-200),(s.right.isDown||t.D.isDown||i.right)&&(a.body.angularVelocity=200)),(!this.isGameOver||this.scene.mission.revenge)&&(this.scene.physics.velocityFromRotation(a.rotation,a.body.speed,a.body.velocity),this.delta+=e,this.delta>16*this.scene.physics.world.timeScale)){this.delta-=16*this.scene.physics.world.timeScale;let e=this.path.pop();e.x=a.x,e.y=a.y,this.path.unshift(e);let s=this.pathRotation.pop();s=a.rotation,this.pathRotation.unshift(s);let t=this.bodyGroup.getChildren();for(let e=0,s=t.length;e<s;e++)t[e].x=h[(e+1)*n].x,t[e].y=h[(e+1)*n].y,t[e].rotation=this.pathRotation[(e+1)*n]}}flashColor(e,s){e.effectTimer||(e.setTint(s),e.effectTimer=this.scene.time.delayedCall(250,function(){e.setTint(16777215),e.effectTimer=null},this))}}class MainGame extends Phaser.Game{constructor(e){let s=window.innerWidth,t=window.innerHeight;if(s<t){let e=s;s=t,t=e}super({key:e.id,type:Phaser.AUTO,parent:e,width:s,height:t,backgroundColor:"#202f53",audio:{noAudio:!0},physics:{default:"arcade",arcade:{}},scale:{mode:Phaser.Scale.NO_SCALE},input:{touch:{capture:!0},gamepad:!0},disableContextMenu:!0,scene:[new LoaderScene,MissionScene,RevengeScene,MapScene]})}}function createGame(){window.game=new MainGame(document.getElementById("canvas")),Config.initGame(window.game)}function log(e){console.log(e)}