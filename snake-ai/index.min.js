/*! Copyright minimindgames.com 16-10-2023 */

class Bug extends Phaser.Physics.Arcade.Sprite{constructor(e,t,s,i){super(e,t,s,i),this.on(Phaser.GameObjects.Events.DESTROY,this.destroyed),this.updateTime=0}destroyed(){2===this.type&&this.explode(),this.moveCallback&&this.scene.time.removeEvent(this.moveCallback)}explode(){let e=150*Config.scale;const t=this.scene.add.particles(this.x,this.y,"EffectExplode",{frame:[2],speed:{start:e,end:-e},quantity:5,ease:"Power2",lifespan:1500,maxParticles:50,blendMode:"ADD",alpha:{start:1,end:0}});this.scene.time.delayedCall(2e3,function(){t.destroy()},this)}initMove(){if(5!==this.type&&6!==this.type)if(this.setBounce(1,1),this.moving=!0,this.collideDelay=0,this.rotation=Phaser.Math.Angle.Random(),3===this.type){this.scene.physics.velocityFromRotation(this.rotation,this.body.speed,this.body.velocity),this.body.angularVelocity=300;let e=100*Config.scale;this.body.setMaxSpeed(Phaser.Math.Between(e,1.25*e)),this.moveCallback=this.scene.time.delayedCall(1e3,this.doMove,[],this)}else{this.body.setVelocity(Phaser.Math.Between(50*Config.scale,150*Config.scale));let e=100;1===this.type&&(e+=100),this.body.angularVelocity=Phaser.Math.Between(-e,e),this.scene.physics.velocityFromRotation(this.rotation,this.body.speed,this.body.velocity)}else this.moving=!0}doMove(){if(this.collideDelay>this.scene.time.now)return void(this.moveCallback=this.scene.time.delayedCall(500,this.doMove,[],this));let e=Phaser.Math.Angle.BetweenPoints(this,this.moveToUnit);this.scene.physics.velocityFromRotation(e,this.speed,this.body.acceleration),this.moveCallback=this.scene.time.delayedCall(500,this.doMove,[],this)}update(e){e>this.updateTime&&(this.updateTime=e+1e3)}}class Card extends Phaser.GameObjects.Container{constructor(e,t,s,i,a){super(e,t,s),e.add.existing(this),this.containerImage=e.add.image(0,0,"Card"),this.setSize(this.containerImage.width,this.containerImage.height),this.add(this.containerImage);let n=e.add.image(0,0,"Card"+(a?"Head":"Body")).setOrigin(2.25,2.35);this.add(n),this.costText=this.scene.add.text(0,0,i.id,Config.cardTextStyle).setOrigin(.5,-1.55),this.add(this.costText);let h=e.add.image(0,0,"CardIcons",i.frame).setOrigin(2.25,2.35).setOrigin(.5);this.add(h),this.icon=h}setReward(e){this.icon.setFrame(e.frame),this.costText.text=e.id}setCard(e){if(null===e){for(;this.getAt(1);)this.removeAt(1,!0);this.card=null}else this.card=e,this.add(new Phaser.GameObjects.Image(this.scene,0,0,"sprites",this.card.name+".png")),this.card.container=this,this.card.costImage=this.scene.add.image(this.width/2,this.height/2,"Card-costs",this.card.cost),this.card.costImage.x-=this.card.costImage.width/2,this.card.costImage.y-=this.card.costImage.height/2,this.add(this.card.costImage),this.card.costImage.visible=!0;this.active=null!==e}}class Config{static initGame(e){let t=e.config.width,s=e.config.height;if(t<s){let e=t;t=s,s=e}console.log(t+"x"+s),Config.resolution=t>=2560&&s>=1440?4:t>=1920&&s>=1080?3:t>=1280&&s>=720?2:1,Config.scale=Config.resolution/4,Config.width=640*Config.resolution,Config.height=360*Config.resolution,Config.centerX=640*Config.resolution,Config.height=360*Config.resolution,Config.titleTextStyle={font:48*Config.scale+"px Courier",fill:"#00ff00",align:"center",backgroundColor:"rgba(0,0,0,0.0)",padding:16*Config.resolution},Config.textStyle={font:64*Config.scale+"px Courier",fill:"#00ff00",align:"center",backgroundColor:"rgba(0,0,0,0.25)",padding:16*Config.resolution},Config.cardTextStyle={font:128*Config.scale+"px Courier",fill:"#ffffff",align:"center"},-1===window.location.href.indexOf("localhost:8383")&&(Config.loadPath="/snake-ai/img/"),Config.reset()}static setScale(e){e.scale.resize(Config.width,Config.height)}static addLevels(e){Config.levels=Config.levels.concat(e),this.lastLevel=Config.levels[Config.levels.length-1],Config.levels.push(0)}static reset(){Config.allMissions=[{id:1,do:"bite",desc:"Eat to Grow",goalSnakeLength:!0,progress:0,target:1,levels:[{enemies:[1,2]},{enemies:[1,2,2]},{enemies:[1,2,2,2]},{enemies:[1,2,2,2,2]}],status(e,t){return this.progress=e.player.bodyGroup.getLength(),t.type===this.target&&e.showProgress(this.progress+" / "+this.goal),this.progress>=this.goal}},{id:2,do:"explode",desc:"Boom Bombs",goal:6,progress:0,target:2,levels:[{enemies:[1,2]},{enemies:[1,2,2]},{enemies:[1,2,2,2]},{enemies:[1,2,2,2,2]}],status(e,t){return t.type===this.target&&(this.progress++,e.showProgress(this.progress+" / "+this.goal)),this.progress>=this.goal}},{id:3,do:"bite",desc:"Back to Green",goalSnakeLength:!0,grayscale:!0,progress:0,target:1,levels:[{enemies:[1,1,2,2,5]},{enemies:[1,2,5]},{enemies:[1,2,5,5]},{enemies:[1,2,2,5]}],status(e,t){return t.eatable&&e.showProgress(this.progress+" / "+this.goal),this.progress>=this.goal}},{id:4,do:"explode",desc:"Explode Bots",goal:1,goalLevel:!0,progress:0,target:3,blade:1,levels:[{enemies:[1,2]},{enemies:[1,2]},{enemies:[1,2]},{enemies:[1,2]}],status(e,t){return t.type===this.target&&(this.progress++,e.showProgress(this.progress+" / "+this.goal)),this.progress>=this.goal}},{id:5,do:"bite",desc:"Overload Teleport",goal:8,progress:0,target:5,levels:[{enemies:[1,1,2]}],status(e,t){return t.type===this.target&&e.player.bodyGroup.getLength()<=Config.snakeLength&&e.showProgress("Grow more Tail"),this.progress>=this.goal}},{id:6,do:"bite",desc:"Get more Speed",goal:1,goalLevel:!0,progress:0,target:6,levels:[{enemies:[1,1,2]}],status(e,t){return t.type===this.target&&(this.progress++,e.showProgress(this.progress+" / "+this.goal)),this.progress>=this.goal}}],Config.levels=[],this.lastLevel=-1,Config.addLevels([1]);let e=[];for(let t=2;t<=6;t++)e.push(t);Phaser.Utils.Array.Shuffle(e),Config.addLevels(e.splice(0,2)),Config.addLevels(e.splice(0,3)),e=[];for(let t=2;t<=4;t++){for(let t=1;t<=6;t++)e.push(t);do{Phaser.Utils.Array.Shuffle(e)}while(this.lastLevel===e[0]||this.lastLevel===e[1]);for(;e.length>0;)Config.addLevels(e.splice(0,3))}Config.missions=[];let t=0,s=0,i=-1;for(let e=0;e<Config.levels.length;e++){let a,n=Config.levels[e];if(0!==n){for(t++,a=0;a<Config.allMissions.length;a++){let e=Config.allMissions[a];if(e.id===n){let t=Object.assign({},e);6===++i&&(i=0,s++),t.level=s,Config.missions.push(t);break}}a===Config.allMissions.length&&console.log("Not found "+a)}else{let e=0;for(let s=Config.missions.length-t;s<Config.missions.length;s++)Config.missions[s].index=++e,Config.missions[s].indexTotal=t;t=0,Config.missions[Config.missions.length-1].showMap=!0}}Config.missions[0].level=0,Config.missions[0].revenge=!0,Config.missions[0].begin=!0;for(let e=3;e<Config.missions.length-2;e+=3)Config.missions[e+Phaser.Math.Between(0,1)].revenge=!0;for(let e=0;e<Config.missions.length;e++)Config.missions[e].index=e;Config.missions[Config.missions.length-1].last=!0,Config.missions.push({id:0,desc:"All Missions Complete",end:!0});Config.beginHeadReward={id:"Life",frame:0},Config.beginBodyReward={id:"Heal",frame:4},Config.headRewards=[{id:"Shield",frame:1},{id:"Helmet",frame:2},{id:"Speed",frame:3}],Config.bodyRewards=[{id:"Length",frame:5},{id:"Tail",frame:6},{id:"Agility",frame:7}],Config.rewards=[],Config.rewards.push(Object.assign({},Config.beginHeadReward)),Config.rewards.push(Object.assign({},Config.beginBodyReward));let a=null,n=null;for(let e=0;e<Config.missions.length-1;e+=6*Config.headRewards.length){do{Phaser.Utils.Array.Shuffle(Config.headRewards)}while(a&&a.id===Config.headRewards[0].id);do{Phaser.Utils.Array.Shuffle(Config.bodyRewards)}while(n&&n.id===Config.bodyRewards[0].id);for(let e=0;e<Config.headRewards.length;e++)Config.rewards.push(Object.assign({},Config.headRewards[e])),a=Config.rewards[Config.rewards.length-1],Config.rewards.push(Object.assign({},Config.bodyRewards[e])),n=Config.rewards[Config.rewards.length-1]}Config.missionsComplete=0,Config.missionsTotal=Config.missions.length,Config.snakeLife=0,Config.snakeLength=6,Config.snakeShield=0,Config.snakeHeal=0,Config.snakeSpeed=0,Config.snakeHelmet=0,Config.snakeTail=0,Config.snakeAgility=0,Config.escapePath=!1,Config.missionsPassed=[],Config.currentLength=1,Config.updateMissions()}static addReward(e,t){let s="";switch(t[e?0:1].id){case"Life":Config.snakeLife++,s+="Snake Life\nto retry mission";break;case"Shield":Config.snakeShield+=5,s+=`Snake Shield\nfor ${Config.snakeShield} seconds`;break;case"Helmet":Config.snakeHelmet+=5,s+=`Snake Helmet\nfor ${Config.snakeHelmet} crashes`;break;case"Speed":Config.snakeSpeed++,s+=`Snake Speed\nmove ${25*Config.snakeSpeed} % faster`;break;case"Heal":Config.snakeHeal++,s+="Snake Heal\nfor each mission";break;case"Length":Config.snakeLength++,s+=`Snake Length\nincrease to ${Config.snakeLength}`;break;case"Tail":Config.snakeTail++,s+=`Extra Tail\nadd tail +${Config.snakeTail}`;break;case"Agility":Config.snakeAgility++,s+=`Snake Agility\nturn +${25*Config.snakeAgility} % faster`}return Config.updateMissions(),s}static updateMissions(){for(let e=0;e<Config.missions.length-1;e++){let t=Config.missions[e],s=t.level||0;t.goalSnakeLength&&(t.goal=Config.snakeLength*(1+s)),t.goalLevel&&(t.goal=1+s),t.progress=0}}}Config.resolution=1,Config.width=640,Config.height=360,Config.loadPath="img/",Config.highScore=0,Config.missions=null,Config.missionsTotal=0,Config.missionsComplete=0,Config.titleTextStyle=null,Config.textStyle=null,Config.cardStyle=null,Config.snakeLife=0,Config.snakeLength=6,Config.snakeShield=0,Config.snakeHeal=0,Config.snakeSpeed=0,Config.snakeHelmet=0,Config.snakeTail=0,Config.snakeAgility=0,Config.refreshLoad="?t="+Date.now(),Config.currentLength=1,Config.escapePath=!1,Config.missionsPassed=[];class Element extends Phaser.Physics.Arcade.Sprite{constructor(e,t,s,i){super(e,t,s,i),this.on(Phaser.GameObjects.Events.DESTROY,this.destroyed),this.scene.tweens.add({targets:this,duration:Phaser.Math.Between(3e3,5e3),scale:0,ease:"Cubic.easeIn",callbackScope:this,onComplete:()=>{this.destroy()}}),this.updateTime=0}destroyed(){this.moveCallback&&this.scene.time.removeEvent(this.moveCallback);let e=this.scene.add.image(this.x,this.y,"UnitElement-flash");this.scene.tweens.add({targets:e,duration:.5,alpha:0,onComplete:function(){e.destroy()}},this)}initMove2(){this.moving=!0,this.rotation=Phaser.Math.Angle.Random(),this.scene.physics.velocityFromRotation(this.rotation,this.body.speed,this.body.velocity),this.body.angularVelocity=300;let e=100*Config.scale;this.body.setMaxSpeed(Phaser.Math.Between(e,1.25*e)),this.scene.physics.velocityFromRotation(this.rotation,this.body.speed,this.body.velocity)}doMove(){let e=Phaser.Math.Angle.BetweenPoints(this,this.moveToUnit);this.scene.physics.velocityFromRotation(e,this.speed,this.body.acceleration),this.moveCallback=this.scene.time.delayedCall(100,this.doMove,[],this)}}const debugMission=0,debugLevel=0,debugMapScene=0;class MapScene extends Phaser.Scene{constructor(){super({key:"MapScene"})}preload(){this.load.path=Config.loadPath,this.resname=["-1","-2","-3",""][Config.resolution-1],this.loadSpriteSheet("teleport",200,200),this.loadSpriteSheet("gate-symbols",50,50),this.loadImage("gate-tile")}create(){this.input.keyboard.resetKeys(),this.cursors=this.input.keyboard.createCursorKeys(),this.cursorsLeftHand=this.input.keyboard.addKeys("A,D"),this.cameras.main.setRoundPixels(!0);this.escapeLabel=this.add.text(.25*this.cameras.main.width,this.cameras.main.centerY,"Escape path\n\nwith a shortcut\n\n\n\nPress [LEFT]",Config.titleTextStyle).setScrollFactor(0).setOrigin(.5),this.revengeLabel=this.add.text(.75*this.cameras.main.width,this.cameras.main.centerY,"Revenge path\n\nhard with Reward\n\n\n\nPress [RIGHT]",Config.titleTextStyle).setScrollFactor(0).setOrigin(.5),this.escapeLabel.setColor("cyan"),this.revengeLabel.setColor("orange"),this.passLabel=this.add.text(this.cameras.main.centerX,this.cameras.main.centerY,"",Config.titleTextStyle).setScrollFactor(0).setOrigin(.5),this.passLabel.text=25-Config.missions.length+" / 24\n\nMissions\n\nComplete",this.passLabel.visible=!1,this.mission=Config.missions[0],this.mission.last&&(this.escapeLabel.visible=!1,this.revengeLabel.visible=!1,this.revengeLabel.text="Snake Revenge!\nComplete"),this.cameras.main.setBackgroundColor("rgba(0,0,0,0.5)");let e=this.add.group(),t=this.cameras.main.centerX,s=this.cameras.main.centerY,i=this.add.sprite(t,s,"teleport");i.scale=3.2,i.alpha=.25,this.anims.exists("teleport")||this.anims.create({key:"teleport",frameRate:30,frames:this.anims.generateFrameNumbers("teleport"),repeat:-1}),i.play("teleport");let a=i;var n=new Phaser.Geom.Circle(0,0,a.scale*a.width/2);let h=[];for(let e=0;e<24;e++)h.push(e);Phaser.Utils.Array.Shuffle(h);var o=this.add.container(a.x,a.y);e.add(o);let r=this.add.group();this.tiles=r;for(let e=0;e<24;e++){let t=r.create(0,0,"gate-tile");t.angle=15*e,h[e]>-2&&(t.tint=6710886),t.level=h[e],o.add(t)}Phaser.Actions.PlaceOnCircle(r.getChildren(),n);let l=this.add.group();this.symbols=l;for(let e=0;e<24;e++){let t=l.create(0,0,"gate-symbols",e);t.angle=15*e,h[e]>-2&&(t.tint=3355443),o.add(t)}Phaser.Actions.PlaceOnCircle(l.getChildren(),n),this.gate=o,this.symbolTween=this.tweens.add({targets:o,duration:6e4,callbackScope:this,rotation:2*Math.PI,repeat:-1},this),this.events.on(Phaser.Scenes.Events.WAKE,()=>{this.showMap()}),this.showMap(!0)}passLevel(e,t,s,i,a){this.time.delayedCall(2e3*e,()=>{let e=this.tiles.getChildren();for(let i=0;i<24;i++)if(e[i].level===t){e[i].tint=16777215,s&&!Config.escapePath&&(this.symbols.getChildren()[i].tint=16777215);break}this.passLabel.text=i,this.passLabel.visible=!0,this.passLabel.alpha=1,this.tweens.add({targets:[this.passLabel],duration:1500,alpha:1,ease:"Cubic.easeIn",callbackScope:this,onComplete:()=>{a&&(this.passLabel.text=25-Config.missions.length+" / 24\n\nMissions\n\nComplete"),this.passLabel.alpha=1}})},[],this)}startGame(e){Config.escapePath=e,this.escapeLabel.visible=!1,this.revengeLabel.visible=!1,this.time.delayedCall(300,()=>{this.scene.switch("MissionScene")},[],this)}update(){if(this.escapeLabel.visible){var e=this.input.activePointer;if(this.cursors.left.isDown||this.cursorsLeftHand.A.isDown||e.isDown||this.cursors.right.isDown||this.cursorsLeftHand.D.isDown)e.isDown?this.usepointer=!0:this.keyleft=this.cursors.left.isDown|this.cursorsLeftHand.A.isDown,this.isStartGame=!0;else if(this.isStartGame){this.isStartGame=!1;let t=!1;this.usepointer?e.x<this.cameras.main.centerX&&(t=!0):t=this.keyleft,this.startGame(t),this.usepointer=!1,this.keyleft=!1}}}loadImage(e){this.load.image(e,e+this.resname+".png"+Config.refreshLoad)}loadSpriteSheet(e,t,s){let i=Config.scale*t,a=Config.scale*s;this.load.spritesheet(e,e+this.resname+".png"+Config.refreshLoad,{frameWidth:i,frameHeight:a})}showMap(e){let t=Config.missionsPassed[Config.missionsPassed.length-1];this.escapeLabel.visible=!1,this.revengeLabel.visible=!1,this.time.delayedCall(2e3*Config.missionsPassed.length,()=>{t.last||(this.escapeLabel.visible=!0,this.revengeLabel.visible=!0)},[],this);for(let e=0;e<Config.missionsPassed.length;e++){let t=Config.missionsPassed[e],s="Mission\n\n"+t.desc+"\n\nComplete";this.passLevel(e,t.index,t.revenge,s,e===Config.missionsPassed.length-1)}Config.missionsPassed=[]}}class RevengeScene extends Phaser.Scene{constructor(){super({key:"RevengeScene"})}preload(){this.load.path=Config.loadPath,this.resname=["-1","-2","-3",""][Config.resolution-1]}create(){this.input.keyboard.resetKeys(),this.cursors=this.input.keyboard.createCursorKeys(),this.cursorsLeftHand=this.input.keyboard.addKeys("A,D"),this.cameras.main.setRoundPixels(!0);this.missionTitle=this.add.text(this.cameras.main.centerX,this.cameras.main.centerY/3,"Begin Reward",Config.titleTextStyle).setScrollFactor(0).setOrigin(.5),this.missionTitle.setFontSize(128*Config.scale),this.missionTitle.visible=!1;let e=.33*this.cameras.main.width,t=this.cameras.main.centerY;this.cardHead=new Card(this,e,t,Config.beginHeadReward,!0),this.cardHead.visible=!1,this.cardBody=new Card(this,2*e,t,Config.beginBodyReward,!0),this.cardBody.visible=!1;this.pressStartText=this.add.text(this.cameras.main.centerX,.8*this.cameras.main.height,"Press [LEFT/RIGHT] to Select",Config.titleTextStyle).setScrollFactor(0).setOrigin(.5),this.showRevenge(!0),this.events.on(Phaser.Scenes.Events.WAKE,()=>{this.showRevenge()}),this.startTitle=this.add.text(this.cameras.main.centerX,this.cameras.main.centerY/2,"",Config.titleTextStyle).setScrollFactor(0).setOrigin(.5),this.startText=this.add.text(this.cameras.main.centerX,this.missionTitle.y+this.missionTitle.height,"",Config.textStyle).setScrollFactor(0).setOrigin(.5)}continueGame(){this.startTitle.visible=!1,this.startText.visible=!1,this.pressStartText.visible=!1,this.scene.switch("MissionScene"),this.cardHead.visible=!1,this.cardBody.visible=!1}startGame(e){if(this.perkSelected)return void this.continueGame();let t,s=Config.addReward(e,this.rewards);this.perkSelected=this.time.now+300,this.pressStartText.visible=!1,this.missionTitle.visible=!1,t=e?this.cardBody:this.cardHead,this.startTitle.text="Revenge Reward",this.startText.text=s,this.startTitle.x=t.x,this.startTitle.y=t.y-this.startTitle.height,this.startTitle.visible=!0,this.startText.x=t.x,this.startText.y=this.startTitle.y+this.startTitle.height,this.startText.visible=!0,this.pressStartText.text="Press to continue",this.pressStartText.x=this.startText.x,this.pressStartText.y=this.startText.y+this.startText.height,this.pressStartText.visible=!0,this.tweens.add({targets:[t],duration:200,alpha:0,callbackScope:this,onComplete:e=>{e.visible=!1,e.alpha=1}})}update(){if(!(this.perkSelected&&this.perkSelected>this.time.now)){var e=this.input.activePointer;if(this.cursors.left.isDown||this.cursorsLeftHand.A.isDown||e.isDown||this.cursors.right.isDown||this.cursorsLeftHand.D.isDown)e.isDown?this.usepointer=!0:this.keyleft=this.cursors.left.isDown|this.cursorsLeftHand.A.isDown,this.isStartGame=!0;else if(this.isStartGame){this.isStartGame=!1;let t=!1;this.usepointer?e.x<this.cameras.main.centerX&&(t=!0):t=this.keyleft,this.startGame(t),this.usepointer=!1,this.keyleft=!1}}}loadImage(e){this.load.image(e,e+this.resname+".png"+Config.refreshLoad)}showRevenge(e){let t=Config.missions[0];this.missionTitle.text=e?"Begin Reward":"Select Reward",this.isStartGame=!1,this.usepointer=!1,this.keyleft=!1,this.perkSelected=0,this.rewards=Config.rewards.splice(0,2);let[s,i]=this.rewards;this.cardHead.setReward(s),this.cardBody.setReward(i),t.end||t.last||(this.missionTitle.visible=!0,this.cardHead.visible=!0,this.cardHead.alpha=1,this.cardBody.visible=!0,this.cardBody.alpha=1)}}class MissionScene extends Phaser.Scene{constructor(){super({key:"MissionScene"})}preload(){this.load.path=Config.loadPath,this.resname=["-1","-2","-3",""][Config.resolution-1],this.loadImage("help-bite"),this.loadImage("help-explode")}create(){if(debugMapScene)return Config.missionsPassed=[],Config.missionsPassed.push(this.scene.get("LoaderScene").mission),Config.missionsPassed=Config.missionsPassed.concat(Config.missions.splice(0,2)),void this.scene.switch("MapScene");let e,t,s,i=this.scene.get("LoaderScene").mission;if(this.restartGame=i.end,i.end?(e=i.desc,t="Snake Revenge!"):(e=Config.missions.length===Config.missionsTotal-1?"Snake Revenge Begins":i.revenge?"Revenge Mission":"Escape Mission",t=(i.revenge,i.desc)),"bite"===i.do||"explode"===i.do){this.helpImage=this.add.image(this.cameras.main.centerX,this.cameras.main.centerY/4,"help-"+i.do),this.helpImage.setDepth(1);let e=["virus","Bomb","Blade","Green","UnitEnergy","flash"][i.target-1];this.targetImage=this.add.image(this.helpImage.x,this.helpImage.y,e),this.targetImage.scale=1.5}this.missionTitle=this.add.text(this.cameras.main.centerX,this.cameras.main.centerY/2,e,Config.titleTextStyle).setScrollFactor(0).setOrigin(.5),this.missionText=this.add.text(this.cameras.main.centerX,this.missionTitle.y+this.missionTitle.height,t,Config.textStyle).setScrollFactor(0).setOrigin(.5),this.isGameOver=!0,this.isGameOverTime=0,i.end?(s="Reload to restart",this.isGameOver=!1):(s="Press [LEFT/RIGHT] to start",this.isGameOver=!0),this.startText=this.add.text(this.cameras.main.centerX,.75*this.cameras.main.height,s,Config.titleTextStyle).setScrollFactor(0).setOrigin(.5),this.input.keyboard.resetKeys(),this.cursors=this.input.keyboard.createCursorKeys(),this.cursorsLeftHand=this.input.keyboard.addKeys("A,D"),this.cameras.main.setRoundPixels(!0),this.disableInputTime=this.time.now,this.events.on(Phaser.Scenes.Events.WAKE,()=>{this.disableInputTime=this.time.now})}startGame(){this.isGameOver=!1,this.missionTitle.visible=!1,this.missionText.visible=!1,this.startText.visible=!1,this.input.keyboard.removeAllKeys(!0),this.input.keyboard.resetKeys(),this.helpImage&&(this.helpImage.visible=!1),this.targetImage&&(this.targetImage.visible=!1),0===this.isGameOverTime?this.scene.resume("LoaderScene"):this.scene.get("LoaderScene").scene.restart()}gameOver(e,t,s,i,a){e&&!Config.missions[0].end&&(this.revenge=i.revenge),e&&1!==i.id&&(this.showMap=i.showMap),this.extralife=a,this.isGameOver=!0,this.isWin=e,this.showMission(t,s)}update(){if(!(this.disableInputTime+500>this.time.now))if(this.revenge)this.isGameOverTime<this.time.now&&(this.scene.switch("RevengeScene"),this.revenge=!1);else if(this.showMap)this.isGameOverTime<this.time.now&&(this.scene.switch("MapScene"),this.showMap=!1);else if(this.isGameOver&&!(this.isGameOverTime>this.time.now)){if(this.isGameOverTime>0)return this.extralife||this.isWin||Config.reset(),Config.missions.length<=1&&(this.isGameOver=!1),void this.startGame();var e=this.input.activePointer;(this.cursors.left.isDown||this.cursorsLeftHand.A.isDown||e.isDown||this.cursors.right.isDown||this.cursorsLeftHand.D.isDown)&&this.startGame()}}showMission(e,t){if(this.missionTween&&(this.tweens.remove(this.missionTween),this.missionTitle.alpha=1,this.missionText.alpha=1),t?(this.missionTitle.text=e,this.missionTitle.visible=!0):(this.missionTitle.visible=!1,t=e),this.missionText.text=t,this.missionText.visible=!0,this.isGameOver){let e=this.isWin?3e3:5e3;this.isGameOverTime=this.time.now+e}else this.missionTween=this.tweens.add({targets:[this.missionTitle,this.missionText],duration:2e3,alpha:0,ease:"Cubic.easeIn",callbackScope:this,onComplete:e=>{this.missionTween=null,this.missionTitle.visible=!1,this.missionTitle.alpha=1,this.missionText.visible=!1,this.missionText.alpha=1}})}loadImage(e){this.load.image(e,e+this.resname+".png"+Config.refreshLoad)}}class LoaderScene extends Phaser.Scene{constructor(){super({key:"LoaderScene",visible:!1}),this.loadProgress=0}preload(){this.load.path=Config.loadPath,this.resname=["-1","-2","-3",""][Config.resolution-1];if(debugMission){let e=0;for(let t=0;t<Config.missions.length;t++)if(Config.missions[t].id===debugMission){if(e<debugLevel){e++;continue}Config.missions.splice(0,t);break}}Config.origLength=Config.currentLength;this.mission=Config.missions[0],Config.missions.splice(0,1),Config.escapePath&&this.mission.revenge&&(console.log("skip revenge"),Config.missionsPassed.push(this.mission),this.mission=Config.missions[0],Config.missions.splice(0,1)),this.loadSpriteSheet("asteroids",32,32),this.loadImage("snakehead"),this.loadImage("snakebite"),this.loadImage("snakebody"),this.loadImage("snaketail"),this.loadImage("snakebody-boom"),this.loadImage("snakeshield"),this.loadImage("Blade"),this.loadImage("Bomb");for(let e=1;e<=3;e++)this.loadImage("planet"+e);this.mission.begin&&(this.loadImage("left"),this.loadImage("right")),this.loadImage("EffectTeleport"),this.loadSpriteSheet("EffectExplode",64,64),this.loadSpriteSheet("virus",64,64),this.loadSpriteSheet("Green",80,80),this.loadSpriteSheet("teleport",200,200),this.loadImage("Card"),this.loadImage("CardHead"),this.loadImage("CardBody"),this.loadSpriteSheet("CardIcons",500,500),this.loadImage("UnitEnergy"),this.loadSpriteSheet("flash",64,64),this.loadSpriteSheet("flares",132,132),this.loadSpriteSheet("UnitElement",32,32),this.loadImage("UnitElement-flash")}create(){Config.setScale(this),this.snap=this.textures.get("asteroids").getSourceImage().height,this.width=2560*Config.scale/this.snap,this.height=2560*Config.scale/this.snap;let e=this.snap*this.width,t=this.snap*this.height;this.w=e,this.h=t,this.overlapColliders=[],this.missionHelper=this.add.text(this.cameras.main.centerX,this.cameras.main.centerY,"",Config.titleTextStyle).setScrollFactor(0).setOrigin(.5),this.missionHelper.visible=!1,this.buildingGroup=this.physics.add.staticGroup(),this.barrierGroup=this.physics.add.staticGroup(),this.enemyGroup=this.physics.add.group({runChildUpdate:!0}),this.teleport=this.buildingGroup.create(e/2,t/2,"teleport"),this.teleport.visible=!1;let s=[];s.push(this.teleport);for(let e=1;e<=3;e++){let t=this.teleport.width;const i=new Phaser.Geom.Rectangle(t,t,this.w-2*t,this.h-2*t);t=3*this.teleport.width;const a=[[1,11639188],[.8,9664102],[.6,13877453]];for(;a.length>0;){let n=this.randomXY(s,t,i),h=this.barrierGroup.create(n.x,n.y,"planet"+e);const o=a.pop();h.setTint(o.pop()),h.setScale(o.pop()),h.body.setSize(h.width/2,h.height/2),s.push(h)}}s.unshift();let i=this.snap,a=i/2,n=this.textures.get("asteroids").frameTotal-2;for(let e=0;e<this.width;e++)this.barrierGroup.create(a+i*e,a,"asteroids",Phaser.Math.Between(0,n)),this.barrierGroup.create(a+i*e,i*this.height-a,"asteroids",Phaser.Math.Between(0,n));for(let e=0;e<this.height;e++)this.barrierGroup.create(a,a+i*e,"asteroids",Phaser.Math.Between(0,n)),this.barrierGroup.create(i*this.width-a,a+i*e,"asteroids",Phaser.Math.Between(0,n));let h=new Phaser.Geom.Point(e/2,t/2);if(this.player=new Player(this),this.time.delayedCall(100,this.addBug,[],this),this.input.keyboard.resetKeys(),this.cursors=this.input.keyboard.createCursorKeys(),this.cursorsLeftHand=this.input.keyboard.addKeys("A,D"),this.input.mouse&&this.input.mouse.disableContextMenu(),this.pointer={left:!1,right:!1},this.text=this.add.text(10,10,"",{font:64*Config.scale+"px Courier",fill:"#00ff00"}).setScrollFactor(0),this.cameras.main.setBounds(0,0,e,t),this.physics.world.setBounds(0,0,e,t),this.addOverlapCollider(this.physics.add.collider(this.enemyGroup,this.barrierGroup)),this.score=0,this.scoreTimer=this.time.addEvent({delay:1e3,callback:function(){this.score++},callbackScope:this,loop:!0}),this.anims.exists("virus")||this.anims.create({key:"virus",frameRate:7,frames:this.anims.generateFrameNumbers("virus"),repeat:-1}),this.anims.exists("Green")||this.anims.create({key:"Green",frameRate:7,frames:this.anims.generateFrameNumbers("Green"),repeat:-1}),this.anims.exists("teleport")||this.anims.create({key:"teleport",frameRate:30,frames:this.anims.generateFrameNumbers("teleport"),repeat:-1}),this.physics.world.timeScale=1,this.player.init(h),this.scene.pause(),this.scene.run("MissionScene"),this.missionScene=this.scene.get("MissionScene"),this.snakeShield=0,this.events.on("resume",()=>{this.time.delayedCall(0,()=>{this.anims.resumeAll(),0===this.snakeShield&&(this.snakeShield=1e3*Config.snakeShield,this.snakeShield+=this.time.now,this.snakeShield>0&&(this.headShield=this.physics.add.sprite(h.x,h.y,"snakeshield"),this.tweens.add({targets:this.headShield,duration:1e3*Config.snakeShield,alpha:0,ease:"Cubic.easeIn"}),this.headShield.preUpdate=(()=>{if(this.player.head){if(!this.player.head.visible||this.snakeShield<this.time.now)return void this.headShield.destroy();this.headShield.x=this.player.head.x,this.headShield.y=this.player.head.y}})))},this)}),this.mission.complete=!1,this.isGameOver=!1,this.mission.blade){let e=[];for(let t=0;t<=this.mission.level;t++){let s;s=0===t?this.player.head:this.randomXY([this.player.head],10*this.snap);let i=this.createBug(3,s.x,s.y);i.moveToUnit=this.player.head,e.push(i),i.setBounce(15,15),i.index=t}for(let t=0;t<e.length;t++)this.addOverlapCollider(this.physics.add.collider(e[t],e,this.collideBlade,null,this))}if(5===this.mission.target){let e,t=10*this.snap;const s=new Phaser.Geom.Rectangle(t,t,this.w-2*t,this.h-2*t);e=this.randomXY([this.player.head],20*this.snap,s);this.createBug(5,e.x,e.y);let i=this.add.sprite(this.player.head.x,this.player.head.y,"EffectTeleport");i.setTint(6710886),i.setDepth(-1),this.tweens.add({targets:i,duration:1e3,alpha:.5,ease:"Cubic.easeIn",yoyo:!0,repeat:-1,callbackScope:this,onComplete:e=>{this.missionTween=null,this.missionHelper.visible=!1,this.missionHelper.alpha=1}})}if(6===this.mission.target){let e=[],t=this.w/4,i=t/8;t-=2*i,e.push(new Phaser.Geom.Rectangle(i,i,t,this.h-2*i)),e.push(new Phaser.Geom.Rectangle(this.w-t-i,i,t,this.h-2*i)),e.push(new Phaser.Geom.Rectangle(i,i,this.w-2*i,t)),e.push(new Phaser.Geom.Rectangle(i,this.h-t-i,this.w-2*i,t)),Phaser.Utils.Array.Shuffle(e);for(let t=0;t<=this.mission.level;t++){let i;this.snap;i=this.randomXY([s],10*this.snap,e[t]),s.push(i);let a=this.createBug(6,i.x,i.y);this.anims.exists("flash")||this.anims.create({key:"flash",frameRate:8,frames:this.anims.generateFrameNumbers("flash"),repeat:-1}),a.play("flash")}}}collideBlade(e,t){e.collideDelay<this.time.now&&(e.collideDelay=this.time.now+Phaser.Math.Between(1e3,8e3)),t.collideDelay<this.time.now&&(t.collideDelay=this.time.now+Phaser.Math.Between(1e3,8e3))}showProgress(e){this.missionHelperTween&&(this.tweens.remove(this.missionHelperTween),this.missionHelper.alpha=1),this.missionHelper.x=this.player.head.x-this.cameras.main.worldView.x,this.missionHelper.y=this.player.head.y-this.cameras.main.worldView.y,this.player.head.y>this.cameras.main.centerY?this.missionHelper.y-=this.player.head.height:this.missionHelper.y+=this.player.head.height,this.missionHelper.text=e,this.missionHelper.visible=!0,this.missionHelperTween=this.tweens.add({targets:this.missionHelper,duration:1500,alpha:0,ease:"Cubic.easeIn",callbackScope:this,onComplete:e=>{this.missionTween=null,this.missionHelper.visible=!1,this.missionHelper.alpha=1}})}addOverlapCollider(e){if(null===e)for(const e of this.overlapColliders)this.physics.world.removeCollider(e);this.overlapColliders.push(e)}teleportEffect(e,t=2500,s=3){let i,a=this.add.image(e.x,e.y,"EffectTeleport");switch(e.type){case-1:i=11206604;break;case 1:i=10066431;break;case 2:i=16751001;break;case 3:i=16711680;break;case 4:i=10092441;break;default:i=16777215}a.setTint(i),a.scale=0,this.tweens.add({targets:a,scale:s,ease:"Linear",duration:t,alpha:0,rotation:2*Math.PI,callbackScope:this,onComplete:function(){a.destroy()}}),e.scale=0,e.alpha=0,e.visible=!0,this.tweens.add({targets:e,scale:1,ease:"Linear",duration:1500,alpha:1,delay:150,rotation:2*Math.PI,callbackScope:this,onComplete:function(){}})}update(e,t){var s=this.input.activePointer;s.isDown?s.x<this.cameras.main.centerX?(this.pointer.left=!0,this.pointer.right=!1):(this.pointer.left=!1,this.pointer.right=!0):(this.pointer.left=!1,this.pointer.right=!1),this.player.update(t,this.cursors,this.cursorsLeftHand,this.pointer),this.text.visible=!1}gameOver(e){if(this.isGameOver)return;Config.currentLength=this.player.bodyGroup.getLength(),Config.currentLength>Config.snakeLength&&(Config.currentLength=Config.snakeLength),e&&Config.missionsPassed.push(this.mission),this.isGameOver=!0,this.addOverlapCollider(null),this.time.removeEvent(this.addCallback),this.time.removeEvent(this.scoreTimer);let t,s=null,i=!1;if(e&&this.mission.revenge)t="Mission complete",this.mission.begin&&(t="Mission Begins"),s="Snake Revenge!",this.cameras.main.fadeOut(4e3),this.player.isGameOver=!0;else if(e){this.cameras.main.fadeOut(4e3);let e=this.teleport;this.tweens.add({targets:e,scale:0,ease:"Cubic.easeIn",duration:3e3,alpha:0,rotation:2*Math.PI,onComplete:function(){e.destroy()}}),this.tweens.add({targets:this.player.bodyGroup.getChildren(),ease:"Cubic.easeIn",duration:2e3,alpha:0,x:this.teleport.x,y:this.teleport.y,rotation:2*Math.PI,onComplete:function(){}}),this.tweens.add({targets:this.player.head,ease:"Cubic.easeIn",duration:2e3,alpha:0,x:this.teleport.x,y:this.teleport.y,rotation:2*Math.PI,onComplete:function(){}}),t="Snake Escape!",s=null}else this.cameras.main.fadeOut(6e3),t="Lost in Mission "+(this.mission.index+1)+" / 24",Config.snakeLife>0?(Config.missions.unshift(this.mission),this.mission.progress=0,s=`Snake Life 1/${Config.snakeLife} to RETRY`,Config.snakeLife--,i=!0,Config.currentLength=Config.origLength):s="GAME OVER";this.missionScene.gameOver(e,t,s,this.mission,i);let a=(this.mission.revenge,2500);e||(a=5e3),this.time.delayedCall(a,()=>{this.physics.pause(),this.anims.pauseAll()},this)}gameOverRestart(){Config.missions.length>0?this.scene.restart():this.time.delayedCall(5e3,()=>{Config.restart(),this.scene.restart()},this)}loadSpriteSheet(e,t,s){let i=Config.scale*t,a=Config.scale*s;this.load.spritesheet(e,e+this.resname+".png"+Config.refreshLoad,{frameWidth:i,frameHeight:a})}loadImage(e){this.load.image(e,e+this.resname+".png"+Config.refreshLoad)}randomX(){const e=this.snap,t=e/2;return Phaser.Math.Between(1,this.width-1)*e+t}randomY(){const e=this.snap,t=e/2;return Phaser.Math.Between(1,this.height-1)*e+t}randomXY(e,t,s){let i=new Phaser.Geom.Point;t*=t;for(let a=0;a<100;a++){if(i.x=this.randomX(),i.y=this.randomY(),s&&!Phaser.Geom.Rectangle.ContainsPoint(s,i))continue;let a;for(a=0;a<e.length;a++){let s=e[a];if(Phaser.Math.Distance.BetweenPointsSquared(i,s)<t)break}if(a===e.length)break}return i}createBug(e,t,s){var i=e;if(!e){let e=this.mission.level;e>=this.mission.levels.length&&(e=this.mission.levels.length-1);let t=this.mission.levels[e].enemies;i=Phaser.Math.RND.pick(t)}let a;if(t)a=new Phaser.Geom.Point(t,s);else{let e=5*this.snap;const t=new Phaser.Geom.Rectangle(e,e,this.w-2*e,this.h-2*e);a=this.randomXY([this.player.head],10*this.snap,t)}let n=new Bug(this,a.x,a.y,["virus","Bomb","Blade","Green","UnitEnergy","flash"][i-1]);n.type=i;let h=1;return 1===i&&n.play("virus"),4===i&&n.play("Green"),1!==i&&4!==i||(n.eatable=!0),3===i&&(h=3),this.enemyGroup.add(n,!0),this.teleportEffect(n,1500,h),5===i&&(n.body.angularVelocity=600),n.moveCallback=this.time.delayedCall(1500,()=>{n.initMove()},[],this),n}addBug(e){if(this.mission.complete)return;this.createBug(e);this.addCallback=this.time.delayedCall(300,this.addBug,[],this)}removeBug(e){if(!this.isGameOver){if(!this.mission.complete){if(0||this.mission.status(this,e))if(this.mission.complete=!0,this.mission.revenge){this.player.overlapBuilding(),this.time.delayedCall(200,function(){this.cameras.main.flash(2500)},[this],this);let t=this.player.bodyGroup.getChildren();t.length>Config.snakeLength+1&&this.player.cutTail(t[Config.snakeLength]);let s=this.enemyGroup.getChildren();for(let t=s.length-1;t>=0;t--)s[t]!==e&&(s[t].type=-1,s[t].destroy())}else this.missionScene.showMission("Mission complete","Teleport to Escape"),this.teleport.visible||(this.teleport.type=-1,this.teleport.body.setSize(this.teleport.width/2,this.teleport.height/2),this.teleportEffect(this.teleport),this.teleport.play("teleport"),this.teleport.scale=0,this.teleport.alpha=0,this.tweens.add({targets:this.teleport,ease:"Linear",duration:4e3,scale:1,alpha:.75,callbackScope:this,onComplete:function(){this.tweens.add({targets:this.teleport,ease:"Linear",duration:1e3,scale:1,alpha:.25,yoyo:!0,repeat:-1})}}),this.tweens.add({targets:this.teleport,ease:"Linear",duration:3500,repeat:-1,rotation:2*Math.PI,onComplete:function(){}}),this.time.delayedCall(3500,()=>{this.addOverlapCollider(this.physics.add.overlap(this.player.head,this.teleport,this.player.overlapBuilding,null,this.player))},[],this))}e.destroy()}}}class Player{constructor(e){this.scene=e,this.bodyGroup=e.physics.add.group(),this.bulletGroup=e.physics.add.group(),this.fireGroup=e.physics.add.group()}init(e){let t=this.scene;this.helmet=Config.snakeHelmet;let s=1+Config.snakeSpeed/4;this.agilityModifier=1+Config.snakeAgility/4;let i=Math.round(300*Config.scale*s);this.speed=i,this.path=[],this.pathRotation=[],this.path.push(new Phaser.Geom.Point(e.x,e.y)),this.pathRotation.push(0),this.pathSpacer=Math.round(10/s),Config.snakeHeal&&Config.currentLength<Config.snakeLength&&(Config.currentLength=Config.snakeLength);let a=Config.currentLength;for(let t=0;t<a;t++){let t=this.addBody(e);this.scene.mission.grayscale&&t.setTexture("snaketail")}a=Config.snakeTail;for(let t=0;t<a;t++){this.addBody(e).setTexture("snaketail")}let n=t.physics.add.sprite(e.x,e.y,"snakehead");n.rotation=Phaser.Math.Angle.Random(),t.cameras.main.startFollow(n,!0,0,.05),n.setCollideWorldBounds(!0),n.body.setVelocity(i),n.body.setSize(n.width/2,n.height/2),n.setDepth(1),this.head=n,t.mission.begin&&(this.head.rotation=-Math.PI/2,this.leftSprite=t.add.sprite(e.x,e.y,"left",0,!0),this.leftSprite.setOrigin(2,0),this.leftSprite.rotation=this.head.rotation+Math.PI/2,this.leftSprite.preUpdate=(()=>{this.leftSprite.visible=!this.isGameOver,this.leftSprite.x=this.head.x,this.leftSprite.y=this.head.y,this.leftSprite.rotation=this.head.rotation+Math.PI/2}),this.rightSprite=t.add.sprite(e.x,e.y,"right",0,!0),this.rightSprite.preUpdate=(()=>{this.rightSprite.visible=!this.isGameOver,this.rightSprite.x=this.head.x,this.rightSprite.y=this.head.y,this.rightSprite.rotation=this.head.rotation+Math.PI/2}),this.rightSprite.setOrigin(-1,0),this.rightSprite.rotation=this.head.rotation+Math.PI/2,this.scene.time.delayedCall(1e4,function(){this.leftSprite.destroy(),this.rightSprite.destroy()},[this],this)),t.addOverlapCollider(t.physics.add.collider(this.head,this.bodyGroup,this.collideHeadBody,null,this)),t.addOverlapCollider(t.physics.add.collider(this.head,t.barrierGroup,this.collideHeadBarrier,null,this)),t.addOverlapCollider(t.physics.add.collider(this.head,this.bulletGroup,this.collideHeadBullet,null,this)),t.addOverlapCollider(t.physics.add.overlap(this.head,t.enemyGroup,this.collideHeadEnemy,null,this)),t.addOverlapCollider(t.physics.add.collider(this.bodyGroup,t.enemyGroup,this.collideBodyEnemy,null,this)),t.addOverlapCollider(t.physics.add.collider(this.bulletGroup,t.enemyGroup,this.collideBulletEnemy,null,this)),5===this.scene.mission.target&&t.addOverlapCollider(t.physics.add.overlap(t.teleport,this.fireGroup,this.overlapTeleportFire,null,this)),this.delta=0,this.collideBarrierTimeout=0,this.collideHeadBodyTime=0,this.isGameOver=!1,this.gameOvertime=1e3,this.explodeTail=0}explodeHead(e){let t=150*Config.scale;const s=this.scene.add.particles(e.x,e.y,"EffectExplode",{frame:[0],speed:{start:.67*t,end:.67*-t},quantity:5,ease:"Power2",lifespan:1e3,maxParticles:100,blendMode:"ADD",alpha:{start:1,end:0}});this.scene.time.delayedCall(2e3,function(){s.destroy()},this)}explode(e){let t=150*Config.scale;const s=this.scene.add.particles(e.x,e.y,"EffectExplode",{frame:[3],speed:{start:t,end:-t},quantity:1,ease:"Power2",lifespan:500,maxParticles:5,blendMode:"ADD",alpha:{start:1,end:0}});this.scene.time.delayedCall(2e3,function(){s.destroy()},this)}addBody(e){let t;t=this.bodyGroup.getLength()<Config.snakeLength?"snakebody":this.explodeTail?"snakebody-boom":"snaketail";let s=this.scene.physics.add.sprite(e.x,e.y,t);this.head?s.rotation=this.head.rotation:s.rotation=-Math.PI/2,s.body.setSize(s.width/2,s.height/2),s.collideTime=this.scene.time.now+200,this.bodyGroup.add(s);for(let e=0;e<this.pathSpacer;e++)this.path.push(new Phaser.Geom.Point(s.x,s.y)),this.pathRotation.push(0);return s}removeTail(e){if(this.explodeTail){let t=Phaser.Math.Between(3,5);this.scene.tweens.add({targets:e,duration:Phaser.Math.Between(40*t,40*t),scale:1.25,repeat:Phaser.Math.Between(t-1,t+1),ease:"Cubic.easeIn",callbackScope:this,yoyo:!0,onComplete:()=>{e.effectTimer&&this.scene.time.removeEvent(e.effectTimer),this.explodeElement(e)}})}else this.scene.tweens.add({targets:e,duration:Phaser.Math.Between(2e3,3500),scale:0,ease:"Cubic.easeIn",callbackScope:this,onComplete:e=>{e.effectTimer&&this.scene.time.removeEvent(e.effectTimer),e.destroy()}})}explodeElement(e){for(let t=0;t<4;t++){let t=new Element(this.scene,e.x,e.y,"UnitElement");this.fireGroup.add(t,!0),t.body.setVelocity(Phaser.Math.Between(100*Config.scale,200*Config.scale)),t.rotation=Phaser.Math.Angle.Random(),this.scene.physics.velocityFromRotation(t.rotation,t.body.speed,t.body.velocity),t.moveToUnit=this.scene.teleport,t.moveCallback=this.scene.time.delayedCall(100,t.doMove,[],t)}e.destroy()}cutTail(e){for(let t=null;t!==e;){t=this.bodyGroup.getChildren().pop(),this.scene.mission.goalSnakeLength&&this.scene.mission.progress>this.bodyGroup.getLength()&&(this.scene.mission.progress=this.bodyGroup.getChildren().length),this.bulletGroup.add(t);for(let e=0;e<this.pathSpacer;e++)this.path.pop(),this.pathRotation.pop();this.explodeTail?t.setTexture("snakebody-boom"):t.setTexture("snaketail"),t.body.setVelocity(Phaser.Math.Between(100*Config.scale,200*Config.scale)),t.rotation=Phaser.Math.Angle.Random(),this.scene.physics.velocityFromRotation(t.rotation,t.body.speed,t.body.velocity),this.removeTail(t)}if(0===this.bodyGroup.getChildren().length){if(this.isGameOver)return;this.isGameOver=!0,this.head.visible=!1,this.explodeHead(this.head),this.scene.gameOver(!1)}}collideHeadBody(e,t){if(this.collideHeadBodyTime>this.scene.time.now)return;if(this.scene.snakeShield>this.scene.time.now)return;if(this.collideHeadBodyTime=this.scene.time.now+200,t.collideTime>this.scene.time.now)return;let s=this.bodyGroup.getChildren().indexOf(t);if(0===s)return;let i=new Phaser.Geom.Point(this.head.x,this.head.y),a=Math.floor((s+1)/2),n=2*this.scene.snap*(2*this.scene.snap);for(let e=-1;e<a;e++){let t,h;-1===e?(t=this.head,h=this.bodyGroup.getChildren()[s]):(t=this.bodyGroup.getChildren()[e],h=this.bodyGroup.getChildren()[e+a]),i.x=(t.x+h.x)/2,i.y=(t.y+h.y)/2;let o=new Phaser.Geom.Line(t.x,t.y,h.x,h.y).getPoints(0,2*this.scene.snap);for(let e=0;e<o.length;e++)if(this.explode(o[e]),this.explodeEnemies(o[e],n),this.scene.isGameOver)return}this.cutTail(t)}explodeEnemies(e,t){for(let s=this.scene.enemyGroup.getChildren().length-1;s>=0;s--){let i=this.scene.enemyGroup.getChildren()[s];Phaser.Math.Distance.BetweenPointsSquared(i,e)<t&&this.scene.removeBug(i)}}collideHeadBarrier(e,t){if(!(this.scene.snakeShield>this.scene.time.now||0===this.bodyGroup.getLength()||this.scene.time.now<this.collideBarrierTimeout)){if(this.helmet>0)return this.helmet--,this.scene.cameras.main.shake(200,.01),void(this.collideBarrierTimeout=this.scene.time.now+200);this.collideBarrierTimeout=this.scene.time.now+100,this.cutTail(this.bodyGroup.getChildren()[this.bodyGroup.getChildren().length-1]),this.scene.cameras.main.shake(200,.01)}}collideHeadEnemy(e,t){if(!t.moving)return;if(!this.head.visible)return;let s=!0;if(this.scene.mission.grayscale&&t.eatable&&(t.type===this.scene.mission.target?this.scene.mission.progress<this.scene.mission.goal&&(this.scene.mission.progress<this.bodyGroup.getLength()&&(this.bodyGroup.getChildren()[this.scene.mission.progress].setTexture("snakebody"),s=!1),this.scene.mission.progress++):(this.scene.mission.progress>0&&(this.scene.mission.progress--,this.bodyGroup.getChildren()[this.scene.mission.progress].setTexture("snaketail")),s=!1)),t.eatable)s&&this.addBody(this.bodyGroup.getLast()||this.head),this.head.setScale(.6666),this.head.setTexture("snakebite"),this.scene.tweens.add({targets:this.head,duration:75,scale:1,yoyo:!0,callbackScope:this,onComplete:function(){this.head.setTexture("snakehead"),this.head.setScale(1)}});else if(5===t.type){this.explodeTail=!0;let e=this.bodyGroup.getChildren();for(let t=0;t<e.length;t++)t>=Config.snakeLength&&e[t].setTexture("snakebody-boom");this.scene.time.delayedCall(2500,function(){this.explodeTail=!1;for(let t=0;t<e.length;t++)t>=Config.snakeLength&&e[t].setTexture("snaketail")},[],this);let t=10*this.scene.snap;const s=new Phaser.Geom.Rectangle(t,t,this.scene.w-t,this.scene.h-t);let i=this.scene.randomXY([this.head],10*this.scene.snap,s);this.scene.createBug(5,i.x,i.y)}else if(6===t.type)this.flame||(this.flame=this.scene.add.particles(this.head.x,this.head.y,"flares",{color:[16436258,16291840,16266752,10421252],colorEase:"quad.out",lifespan:2400,angle:{min:-100,max:-80},scale:{start:.7,end:0,ease:"sine.out"},speed:100,advance:2e3,blendMode:"ADD"})),this.speed*=1.125,this.head.body.setVelocity(this.speed);else if(this.scene.snakeShield<this.scene.time.now){let e=this.bodyGroup.getChildren().length-Phaser.Math.Between(3,4);e<=0&&(e=0),this.cutTail(this.bodyGroup.getChildren()[e]),this.scene.cameras.main.shake(200,.01)}3!==t.type&&this.scene.removeBug(t)}collideBodyEnemy(e,t){if(t.moving&&(2===t.type&&this.scene.removeBug(t),3===t.type)){let e=this.bodyGroup.getChildren();for(let t=0;t<e.length;t++)this.flashColor(e[t],65280)}}overlapTeleportFire(e,t){this.scene.mission.progress++,t.destroy()}collideBulletEnemy(e,t){t.moving&&2===t.type&&(e.destroy(),this.scene.removeBug(t))}overlapBuilding(e,t){if(this.isGameOver)return;this.isGameOver=!0,this.bodyGroup.getChildren().length-1>=Config.snakeLength&&this.cutTail(this.bodyGroup.getChildren()[Config.snakeLength]),this.scene.gameOver(!0)}update(e,t,s,i){this.isGameOver&&(this.gameOvertime+=e,this.scene.physics.world.timeScale+=this.gameOvertime/1e3/20);let a=this.head,n=this.path,h=this.pathSpacer;if(a.setAcceleration(0),a.setDrag(0),a.body.angularVelocity=0,this.head.visible&&((t.left.isDown||s.A.isDown||i.left)&&(a.body.angularVelocity=-200*this.agilityModifier),(t.right.isDown||s.D.isDown||i.right)&&(a.body.angularVelocity=200*this.agilityModifier)),!this.isGameOver||this.scene.mission.revenge){if(this.scene.physics.velocityFromRotation(a.rotation,a.body.speed,a.body.velocity),this.delta+=e,this.delta>16*this.scene.physics.world.timeScale){this.delta-=16*this.scene.physics.world.timeScale;let e=this.path.pop();e.x=a.x,e.y=a.y,this.path.unshift(e);let t=this.pathRotation.pop();t=a.rotation,this.pathRotation.unshift(t);let s=this.bodyGroup.getChildren();for(let e=0,t=s.length;e<t;e++)s[e].x=n[(e+1)*h].x,s[e].y=n[(e+1)*h].y,s[e].rotation=this.pathRotation[(e+1)*h]}if(this.flame){let e=this.flame;e.visible=!this.isGameOver,e.x=this.head.x,e.y=this.head.y,e.rotation=this.head.rotation-Math.PI/2,e.setDepth(1)}}}flashColor(e,t){e.effectTimer||(e.setTint(t),e.effectTimer=this.scene.time.delayedCall(250,function(){e.setTint(16777215),e.effectTimer=null},this))}}class MainGame extends Phaser.Game{constructor(e){let t=window.innerWidth,s=window.innerHeight;if(t<s){let e=t;t=s,s=e}super({key:e.id,type:Phaser.AUTO,parent:e,width:t,height:s,backgroundColor:"#202f53",audio:{noAudio:!0},physics:{default:"arcade",arcade:{}},scale:{mode:Phaser.Scale.NO_SCALE},input:{touch:{capture:!0},gamepad:!0},disableContextMenu:!0,scene:[new LoaderScene,MissionScene,RevengeScene,MapScene]})}}function createGame(){window.game=new MainGame(document.getElementById("canvas")),Config.initGame(window.game)}function log(e){console.log(e)}